{"version":3,"file":"files_sharing-files_sharing.js?v=95343e67950e5cd7fee4","mappings":";6BAAIA,+BCoFcC,EA2HdC,EA2BAC,8CArJa,QADCF,GAWK,YATR,UACFG,OAAO,SACPC,SAEF,UACFD,OAAO,SACPE,OAAOL,EAAKM,KACZF,QAmHT,SAAWH,GACPA,EAAiB,OAAI,SACrBA,EAAe,KAAI,MACtB,CAHD,CAGGA,IAAaA,EAAW,CAAC,IAwB5B,SAAWC,GACPA,EAAWA,EAAiB,KAAI,GAAK,OACrCA,EAAWA,EAAmB,OAAI,GAAK,SACvCA,EAAWA,EAAiB,KAAI,GAAK,OACrCA,EAAWA,EAAmB,OAAI,GAAK,SACvCA,EAAWA,EAAmB,OAAI,GAAK,SACvCA,EAAWA,EAAkB,MAAI,IAAM,QACvCA,EAAWA,EAAgB,IAAI,IAAM,KACxC,CARD,CAQGA,IAAeA,EAAa,CAAC,IAKhC,MAsCMK,EAAiB,SAAUC,EAAQC,GACrC,OAAoC,OAA7BD,EAAOE,MAAMD,EACxB,EAIME,EAAe,CAACC,EAAMH,KACxB,GAAI,OAAQG,IAA4B,iBAAZA,EAAKC,IAAmBD,EAAKC,GAAK,GAC1D,MAAM,IAAIC,MAAM,4BAEpB,IAAKF,EAAKJ,OACN,MAAM,IAAIM,MAAM,4BAEpB,IACI,IAAIC,IAAIH,EAAKJ,OACjB,CACA,MAAOQ,GACH,MAAM,IAAIF,MAAM,oDACpB,CACA,IAAKF,EAAKJ,OAAOS,WAAW,QACxB,MAAM,IAAIH,MAAM,oDAEpB,GAAI,UAAWF,KAAUA,EAAKM,iBAAiBC,MAC3C,MAAM,IAAIL,MAAM,sBAEpB,GAAI,WAAYF,KAAUA,EAAKQ,kBAAkBD,MAC7C,MAAM,IAAIL,MAAM,uBAEpB,IAAKF,EAAKS,MAA6B,iBAAdT,EAAKS,OACtBT,EAAKS,KAAKX,MAAM,yBACpB,MAAM,IAAII,MAAM,qCAEpB,GAAI,SAAUF,GAA6B,iBAAdA,EAAKU,KAC9B,MAAM,IAAIR,MAAM,qBAEpB,GAAI,gBAAiBF,KAAsC,iBAArBA,EAAKW,aACpCX,EAAKW,aAAerB,EAAWsB,MAC/BZ,EAAKW,aAAerB,EAAWuB,KAClC,MAAM,IAAIX,MAAM,uBAEpB,GAAI,UAAWF,GACO,OAAfA,EAAKc,OACiB,iBAAfd,EAAKc,MACf,MAAM,IAAIZ,MAAM,sBAEpB,GAAI,eAAgBF,GAAmC,iBAApBA,EAAKe,WACpC,MAAM,IAAIb,MAAM,6BAEpB,GAAI,SAAUF,GAA6B,iBAAdA,EAAKgB,KAC9B,MAAM,IAAId,MAAM,uBAEpB,GAAIF,EAAKgB,OAAShB,EAAKgB,KAAKX,WAAW,KACnC,MAAM,IAAIH,MAAM,wCAEpB,GAAIF,EAAKgB,OAAShB,EAAKJ,OAAOqB,SAASjB,EAAKgB,MACxC,MAAM,IAAId,MAAM,mCAEpB,GAAIF,EAAKgB,MAAQrB,EAAeK,EAAKJ,OAAQC,GAAa,CACtD,MAAMqB,EAAUlB,EAAKJ,OAAOE,MAAMD,GAAY,GAC9C,IAAKG,EAAKJ,OAAOqB,UAAS,IAAAE,MAAKD,EAASlB,EAAKgB,OACzC,MAAM,IAAId,MAAM,4DAExB,GAwBJ,MAAMkB,EACFC,MACAC,YACAC,iBAAmB,mCACnB,WAAAC,CAAYxB,EAAMH,GAEdE,EAAaC,EAAMH,GAAc4B,KAAKF,kBACtCE,KAAKJ,MAAQrB,EACb,MAAM0B,EAAU,CACZC,IAAK,CAACC,EAAQC,EAAMC,KAEhBL,KAAKJ,MAAa,MAAI,IAAId,KAEnBwB,QAAQJ,IAAIC,EAAQC,EAAMC,IAErCE,eAAgB,CAACJ,EAAQC,KAErBJ,KAAKJ,MAAa,MAAI,IAAId,KAEnBwB,QAAQC,eAAeJ,EAAQC,KAI9CJ,KAAKH,YAAc,IAAIW,MAAMjC,EAAKe,YAAc,CAAC,EAAGW,UAC7CD,KAAKJ,MAAMN,WACdlB,IACA4B,KAAKF,iBAAmB1B,EAEhC,CAIA,UAAID,GAEA,OAAO6B,KAAKJ,MAAMzB,OAAOsC,QAAQ,OAAQ,GAC7C,CAIA,YAAIC,GACA,OAAO,IAAAA,UAASV,KAAK7B,OACzB,CAIA,aAAIwC,GACA,OAAO,IAAAC,SAAQZ,KAAK7B,OACxB,CAKA,WAAI0C,GACA,GAAIb,KAAKT,KAAM,CAEX,MAAMuB,EAAad,KAAK7B,OAAO4C,QAAQf,KAAKT,MAC5C,OAAO,IAAAsB,SAAQb,KAAK7B,OAAO6C,MAAMF,EAAad,KAAKT,KAAK0B,SAAW,IACvE,CAGA,MAAMC,EAAM,IAAIxC,IAAIsB,KAAK7B,QACzB,OAAO,IAAA0C,SAAQK,EAAIC,SACvB,CAIA,QAAInC,GACA,OAAOgB,KAAKJ,MAAMZ,IACtB,CAIA,SAAIH,GACA,OAAOmB,KAAKJ,MAAMf,KACtB,CAIA,UAAIE,GACA,OAAOiB,KAAKJ,MAAMb,MACtB,CAIA,QAAIE,GACA,OAAOe,KAAKJ,MAAMX,IACtB,CAIA,cAAIK,GACA,OAAOU,KAAKH,WAChB,CAIA,eAAIX,GAEA,OAAmB,OAAfc,KAAKX,OAAmBW,KAAK9B,oBAICkD,IAA3BpB,KAAKJ,MAAMV,YACZc,KAAKJ,MAAMV,YACXrB,EAAWsB,KALNtB,EAAWwD,IAM1B,CAIA,SAAIhC,GAEA,OAAKW,KAAK9B,eAGH8B,KAAKJ,MAAMP,MAFP,IAGf,CAIA,kBAAInB,GACA,OAAOA,EAAe8B,KAAK7B,OAAQ6B,KAAKF,iBAC5C,CAIA,QAAIP,GAEA,OAAIS,KAAKJ,MAAML,KACJS,KAAKJ,MAAML,KAAKkB,QAAQ,WAAY,MAG3CT,KAAK9B,iBACQ,IAAA2C,SAAQb,KAAK7B,QACdmD,MAAMtB,KAAKF,kBAAkByB,OAEtC,IACX,CAIA,QAAIC,GACA,GAAIxB,KAAKT,KAAM,CAEX,MAAMuB,EAAad,KAAK7B,OAAO4C,QAAQf,KAAKT,MAC5C,OAAOS,KAAK7B,OAAO6C,MAAMF,EAAad,KAAKT,KAAK0B,SAAW,GAC/D,CACA,OAAQjB,KAAKa,QAAU,IAAMb,KAAKU,UAAUD,QAAQ,QAAS,IACjE,CAKA,UAAIgB,GACA,OAAOzB,KAAKJ,OAAOpB,IAAMwB,KAAKV,YAAYmC,MAC9C,CAOA,IAAAC,CAAKC,GACDrD,EAAa,IAAK0B,KAAKJ,MAAOzB,OAAQwD,GAAe3B,KAAKF,kBAC1DE,KAAKJ,MAAMzB,OAASwD,EACpB3B,KAAKJ,MAAMf,MAAQ,IAAIC,IAC3B,CAKA,MAAA8C,CAAOlB,GACH,GAAIA,EAASlB,SAAS,KAClB,MAAM,IAAIf,MAAM,oBAEpBuB,KAAK0B,MAAK,IAAAb,SAAQb,KAAK7B,QAAU,IAAMuC,EAC3C,EAwBJ,MAAMmB,UAAalC,EACf,QAAImC,GACA,OAAOlE,EAASiE,IACpB,EAwBJ,MAAME,UAAepC,EACjB,WAAAI,CAAYxB,GAERyD,MAAM,IACCzD,EACHS,KAAM,wBAEd,CACA,QAAI8C,GACA,OAAOlE,EAASmE,MACpB,CACA,aAAIpB,GACA,OAAO,IACX,CACA,QAAI3B,GACA,MAAO,sBACX,8BChlBJ,GAAeiD,EAAAA,EAAAA,MACVnE,OAAO,iBACPoE,aACAnE,2PCxBLoE,EAAA,kBAAAC,CAAA,MAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAxC,KAAA,EAAAyC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAX,EAAAC,EAAAvC,GAAA,OAAAiC,OAAAI,eAAAC,EAAAC,EAAA,CAAAvC,MAAAA,EAAAkD,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAAC,EAAA,KAAAU,EAAA,aAAAI,GAAAJ,EAAA,SAAAX,EAAAC,EAAAvC,GAAA,OAAAsC,EAAAC,GAAAvC,CAAA,WAAAsD,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAA7D,MAAAiE,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,EAAAC,EAAA7B,EAAA8B,GAAA,WAAA3C,KAAA,SAAA2C,IAAAD,EAAAE,KAAA/B,EAAA8B,GAAA,OAAAf,GAAA,OAAA5B,KAAA,QAAA2C,IAAAf,EAAA,EAAAtB,EAAAuB,KAAAA,EAAA,IAAAgB,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAzC,OAAA0C,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA5C,GAAAG,EAAAkC,KAAAO,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAAtC,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAW,GAAA,SAAAM,EAAA7C,GAAA,0BAAA8C,SAAA,SAAAC,GAAAhC,EAAAf,EAAA+C,GAAA,SAAAb,GAAA,YAAAc,QAAAD,EAAAb,EAAA,gBAAAe,EAAAtB,EAAAuB,GAAA,SAAAC,EAAAJ,EAAAb,EAAAkB,EAAAC,GAAA,IAAAC,EAAAtB,EAAAL,EAAAoB,GAAApB,EAAAO,GAAA,aAAAoB,EAAA/D,KAAA,KAAAgE,EAAAD,EAAApB,IAAApE,EAAAyF,EAAAzF,MAAA,OAAAA,GAAA,UAAA0F,EAAA1F,IAAAmC,EAAAkC,KAAArE,EAAA,WAAAoF,EAAAE,QAAAtF,EAAA2F,SAAAC,MAAA,SAAA5F,GAAAqF,EAAA,OAAArF,EAAAsF,EAAAC,EAAA,aAAAlC,GAAAgC,EAAA,QAAAhC,EAAAiC,EAAAC,EAAA,IAAAH,EAAAE,QAAAtF,GAAA4F,MAAA,SAAAC,GAAAJ,EAAAzF,MAAA6F,EAAAP,EAAAG,EAAA,aAAAK,GAAA,OAAAT,EAAA,QAAAS,EAAAR,EAAAC,EAAA,IAAAA,EAAAC,EAAApB,IAAA,KAAA2B,EAAA1D,EAAA,gBAAArC,MAAA,SAAAiF,EAAAb,GAAA,SAAA4B,IAAA,WAAAZ,GAAA,SAAAE,EAAAC,GAAAF,EAAAJ,EAAAb,EAAAkB,EAAAC,EAAA,WAAAQ,EAAAA,EAAAA,EAAAH,KAAAI,EAAAA,GAAAA,GAAA,aAAA/B,EAAAV,EAAAE,EAAAM,GAAA,IAAAkC,EAAA,iCAAAhB,EAAAb,GAAA,iBAAA6B,EAAA,UAAA7H,MAAA,iDAAA6H,EAAA,cAAAhB,EAAA,MAAAb,EAAA,OAAApE,WAAAe,EAAAmF,MAAA,OAAAnC,EAAAkB,OAAAA,EAAAlB,EAAAK,IAAAA,IAAA,KAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,IAAAA,IAAA9B,EAAA,gBAAA8B,CAAA,cAAArC,EAAAkB,OAAAlB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,aAAAL,EAAAkB,OAAA,uBAAAgB,EAAA,MAAAA,EAAA,YAAAlC,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,IAAA,gBAAAL,EAAAkB,QAAAlB,EAAA0C,OAAA,SAAA1C,EAAAK,KAAA6B,EAAA,gBAAAT,EAAAtB,EAAAX,EAAAE,EAAAM,GAAA,cAAAyB,EAAA/D,KAAA,IAAAwE,EAAAlC,EAAAmC,KAAA,6BAAAV,EAAApB,MAAAE,EAAA,gBAAAtE,MAAAwF,EAAApB,IAAA8B,KAAAnC,EAAAmC,KAAA,WAAAV,EAAA/D,OAAAwE,EAAA,YAAAlC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAA,YAAAiC,EAAAF,EAAApC,GAAA,IAAA2C,EAAA3C,EAAAkB,OAAAA,EAAAkB,EAAAvD,SAAA8D,GAAA,QAAA3F,IAAAkE,EAAA,OAAAlB,EAAAoC,SAAA,eAAAO,GAAAP,EAAAvD,SAAA+D,SAAA5C,EAAAkB,OAAA,SAAAlB,EAAAK,SAAArD,EAAAsF,EAAAF,EAAApC,GAAA,UAAAA,EAAAkB,SAAA,WAAAyB,IAAA3C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAAF,EAAA,aAAApC,EAAA,IAAAkB,EAAAtB,EAAAe,EAAAkB,EAAAvD,SAAAmB,EAAAK,KAAA,aAAAoB,EAAA/D,KAAA,OAAAsC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAAL,EAAAoC,SAAA,KAAA7B,EAAA,IAAAuC,EAAArB,EAAApB,IAAA,OAAAyC,EAAAA,EAAAX,MAAAnC,EAAAoC,EAAAW,YAAAD,EAAA7G,MAAA+D,EAAAgD,KAAAZ,EAAAa,QAAA,WAAAjD,EAAAkB,SAAAlB,EAAAkB,OAAA,OAAAlB,EAAAK,SAAArD,GAAAgD,EAAAoC,SAAA,KAAA7B,GAAAuC,GAAA9C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAoC,SAAA,KAAA7B,EAAA,UAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAA/D,KAAA,gBAAA+D,EAAApB,IAAA+C,EAAAQ,WAAAnC,CAAA,UAAAxB,EAAAN,GAAA,KAAA8D,WAAA,EAAAJ,OAAA,SAAA1D,EAAAsB,QAAAiC,EAAA,WAAAW,OAAA,YAAA/C,EAAAgD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAlF,GAAA,GAAAmF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAjH,QAAA,KAAAoH,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAjH,QAAA,GAAAuB,EAAAkC,KAAAwD,EAAAG,GAAA,OAAAjB,EAAA/G,MAAA6H,EAAAG,GAAAjB,EAAAb,MAAA,EAAAa,EAAA,OAAAA,EAAA/G,WAAAe,EAAAgG,EAAAb,MAAA,EAAAa,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAkB,EAAA,UAAAA,IAAA,OAAAjI,WAAAe,EAAAmF,MAAA,UAAA3B,EAAArC,UAAAsC,EAAAnC,EAAAyC,EAAA,eAAA9E,MAAAwE,EAAArB,cAAA,IAAAd,EAAAmC,EAAA,eAAAxE,MAAAuE,EAAApB,cAAA,IAAAoB,EAAA2D,YAAAjF,EAAAuB,EAAAzB,EAAA,qBAAAhB,EAAAoG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAA1I,YAAA,QAAA2I,IAAAA,IAAA9D,GAAA,uBAAA8D,EAAAH,aAAAG,EAAAC,MAAA,EAAAvG,EAAAwG,KAAA,SAAAH,GAAA,OAAAnG,OAAAuG,eAAAvG,OAAAuG,eAAAJ,EAAA5D,IAAA4D,EAAAK,UAAAjE,EAAAvB,EAAAmF,EAAArF,EAAA,sBAAAqF,EAAAlG,UAAAD,OAAA6B,OAAAgB,GAAAsD,CAAA,EAAArG,EAAA2G,MAAA,SAAAtE,GAAA,OAAAuB,QAAAvB,EAAA,EAAAW,EAAAI,EAAAjD,WAAAe,EAAAkC,EAAAjD,UAAAW,GAAA,0BAAAd,EAAAoD,cAAAA,EAAApD,EAAA4G,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,IAAAA,EAAAwD,SAAA,IAAAC,EAAA,IAAA1D,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAArD,EAAAoG,oBAAA3E,GAAAqF,EAAAA,EAAA9B,OAAAnB,MAAA,SAAAH,GAAA,OAAAA,EAAAS,KAAAT,EAAAzF,MAAA6I,EAAA9B,MAAA,KAAAhC,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAA/C,EAAA+G,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAvG,KAAAyG,EAAAF,EAAArB,KAAAlF,GAAA,OAAAuG,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAlI,QAAA,KAAA2B,EAAAuG,EAAA5H,MAAA,GAAAqB,KAAAyG,EAAA,OAAAjC,EAAA/G,MAAAuC,EAAAwE,EAAAb,MAAA,EAAAa,CAAA,QAAAA,EAAAb,MAAA,EAAAa,CAAA,GAAAhF,EAAA8C,OAAAA,EAAAb,EAAA9B,UAAA,CAAAxC,YAAAsE,EAAA4D,MAAA,SAAAsB,GAAA,QAAAC,KAAA,OAAApC,KAAA,OAAAT,KAAA,KAAAC,WAAAxF,EAAA,KAAAmF,MAAA,OAAAC,SAAA,UAAAlB,OAAA,YAAAb,SAAArD,EAAA,KAAAyG,WAAAxC,QAAA0C,IAAAwB,EAAA,QAAAZ,KAAA,WAAAA,EAAAc,OAAA,IAAAjH,EAAAkC,KAAA,KAAAiE,KAAAP,OAAAO,EAAA3H,MAAA,WAAA2H,QAAAvH,EAAA,EAAAsI,KAAA,gBAAAnD,MAAA,MAAAoD,EAAA,KAAA9B,WAAA,GAAAG,WAAA,aAAA2B,EAAA7H,KAAA,MAAA6H,EAAAlF,IAAA,YAAAmF,IAAA,EAAA/C,kBAAA,SAAAgD,GAAA,QAAAtD,KAAA,MAAAsD,EAAA,IAAAzF,EAAA,cAAA0F,EAAAC,EAAAC,GAAA,OAAAnE,EAAA/D,KAAA,QAAA+D,EAAApB,IAAAoF,EAAAzF,EAAAgD,KAAA2C,EAAAC,IAAA5F,EAAAkB,OAAA,OAAAlB,EAAAK,SAAArD,KAAA4I,CAAA,SAAA3B,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAAxC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAqC,EAAA,UAAAtC,EAAAC,QAAA,KAAA+B,KAAA,KAAAS,EAAAzH,EAAAkC,KAAA8C,EAAA,YAAA0C,EAAA1H,EAAAkC,KAAA8C,EAAA,iBAAAyC,GAAAC,EAAA,SAAAV,KAAAhC,EAAAE,SAAA,OAAAoC,EAAAtC,EAAAE,UAAA,WAAA8B,KAAAhC,EAAAG,WAAA,OAAAmC,EAAAtC,EAAAG,WAAA,SAAAsC,GAAA,QAAAT,KAAAhC,EAAAE,SAAA,OAAAoC,EAAAtC,EAAAE,UAAA,YAAAwC,EAAA,UAAAzL,MAAA,kDAAA+K,KAAAhC,EAAAG,WAAA,OAAAmC,EAAAtC,EAAAG,WAAA,KAAAb,OAAA,SAAAhF,EAAA2C,GAAA,QAAA4D,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,QAAA,KAAA+B,MAAAhH,EAAAkC,KAAA8C,EAAA,oBAAAgC,KAAAhC,EAAAG,WAAA,KAAAwC,EAAA3C,EAAA,OAAA2C,IAAA,UAAArI,GAAA,aAAAA,IAAAqI,EAAA1C,QAAAhD,GAAAA,GAAA0F,EAAAxC,aAAAwC,EAAA,UAAAtE,EAAAsE,EAAAA,EAAAnC,WAAA,UAAAnC,EAAA/D,KAAAA,EAAA+D,EAAApB,IAAAA,EAAA0F,GAAA,KAAA7E,OAAA,YAAA8B,KAAA+C,EAAAxC,WAAAhD,GAAA,KAAAyF,SAAAvE,EAAA,EAAAuE,SAAA,SAAAvE,EAAA+B,GAAA,aAAA/B,EAAA/D,KAAA,MAAA+D,EAAApB,IAAA,gBAAAoB,EAAA/D,MAAA,aAAA+D,EAAA/D,KAAA,KAAAsF,KAAAvB,EAAApB,IAAA,WAAAoB,EAAA/D,MAAA,KAAA8H,KAAA,KAAAnF,IAAAoB,EAAApB,IAAA,KAAAa,OAAA,cAAA8B,KAAA,kBAAAvB,EAAA/D,MAAA8F,IAAA,KAAAR,KAAAQ,GAAAjD,CAAA,EAAA0F,OAAA,SAAA1C,GAAA,QAAAU,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAG,aAAAA,EAAA,YAAAyC,SAAA5C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,CAAA,GAAA2F,MAAA,SAAA7C,GAAA,QAAAY,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,SAAAA,EAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAA/D,KAAA,KAAAyI,EAAA1E,EAAApB,IAAAsD,EAAAP,EAAA,QAAA+C,CAAA,YAAA9L,MAAA,0BAAA+L,cAAA,SAAAtC,EAAAf,EAAAE,GAAA,YAAAb,SAAA,CAAAvD,SAAAiC,EAAAgD,GAAAf,WAAAA,EAAAE,QAAAA,GAAA,cAAA/B,SAAA,KAAAb,SAAArD,GAAAuD,CAAA,GAAAvC,CAAA,UAAAqI,EAAAC,EAAA/E,EAAAC,EAAA+E,EAAAC,EAAAhI,EAAA6B,GAAA,QAAAyC,EAAAwD,EAAA9H,GAAA6B,GAAApE,EAAA6G,EAAA7G,KAAA,OAAA8F,GAAA,YAAAP,EAAAO,EAAA,CAAAe,EAAAX,KAAAZ,EAAAtF,GAAA4I,QAAAtD,QAAAtF,GAAA4F,KAAA0E,EAAAC,EAAA,UAAAC,EAAAxB,EAAAyB,GAAA,IAAA3B,EAAA7G,OAAA6G,KAAAE,GAAA,GAAA/G,OAAAyI,sBAAA,KAAAC,EAAA1I,OAAAyI,sBAAA1B,GAAAyB,IAAAE,EAAAA,EAAAC,QAAA,SAAAC,GAAA,OAAA5I,OAAA6I,yBAAA9B,EAAA6B,GAAA3H,UAAA,KAAA4F,EAAArB,KAAAsD,MAAAjC,EAAA6B,EAAA,QAAA7B,CAAA,UAAAkC,EAAAlL,GAAA,QAAAkI,EAAA,EAAAA,EAAAiD,UAAArK,OAAAoH,IAAA,KAAAlK,EAAA,MAAAmN,UAAAjD,GAAAiD,UAAAjD,GAAA,GAAAA,EAAA,EAAAwC,EAAAvI,OAAAnE,IAAA,GAAAkH,SAAA,SAAAzC,GAAA2I,EAAApL,EAAAyC,EAAAzE,EAAAyE,GAAA,IAAAN,OAAAkJ,0BAAAlJ,OAAAmJ,iBAAAtL,EAAAmC,OAAAkJ,0BAAArN,IAAA0M,EAAAvI,OAAAnE,IAAAkH,SAAA,SAAAzC,GAAAN,OAAAI,eAAAvC,EAAAyC,EAAAN,OAAA6I,yBAAAhN,EAAAyE,GAAA,WAAAzC,CAAA,UAAAoL,EAAA5I,EAAAC,EAAAvC,GAAA,OAAAuC,EAAA,SAAA6B,GAAA,IAAA7B,EAAA,SAAA8I,EAAAC,GAAA,cAAA5F,EAAA2F,IAAA,OAAAA,EAAA,OAAAA,EAAA,IAAAE,EAAAF,EAAA3I,OAAA8I,aAAA,QAAAzK,IAAAwK,EAAA,KAAAE,EAAAF,EAAAlH,KAAAgH,EAAAC,UAAA,cAAA5F,EAAA+F,GAAA,OAAAA,EAAA,UAAA7E,UAAA,uDAAA8E,OAAAL,EAAA,CAAAM,CAAAvH,GAAA,iBAAAsB,EAAAnD,GAAAA,EAAAmJ,OAAAnJ,EAAA,CAAAqJ,CAAArJ,MAAAD,EAAAL,OAAAI,eAAAC,EAAAC,EAAA,CAAAvC,MAAAA,EAAAkD,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAAC,GAAAvC,EAAAsC,CAAA,CAIO,ICiBIuJ,EDjBEC,EAAW,UAAHC,OAA6B,QAA7BC,GAAaC,EAAAA,EAAAA,aAAgB,IAAAD,OAAA,EAAhBA,EAAkBpO,KAC9CsO,EAAU,CACZ,eAAgB,oBAEdC,EAAiB,SAAUC,GAC7B,IAAI,IAAAC,EACMC,EAAmC,YAAxBF,aAAQ,EAARA,EAAUG,WACrBC,GAAuC,KAA1BJ,aAAQ,EAARA,EAAUK,aACvBnN,EAAOgN,EAAW5K,EAASF,EAC3BJ,EAASgL,EAASM,YAClBC,EAAaH,GAAaI,EAAAA,EAAAA,aAAY,sDAAuD,CAAExL,OAAAA,SAAYL,EAE3GI,GAAOiL,aAAQ,EAARA,EAAUjL,OAAQiL,EAASS,YAClC/O,GAASgP,EAAAA,EAAAA,mBAAkB,OAAAf,OAAOD,EAAQ,KAAAC,OAAI5K,GAAO4L,WAAW,SAAU,MAE5EvO,EAAQ4N,SAAAA,EAAUY,WAAa,IAAIvO,KAA6B,IAAvB2N,EAASY,iBAAsBjM,EAI5E,OAHIqL,aAAQ,EAARA,EAAUa,SAASb,aAAQ,EAARA,EAAUY,aAAc,KAC3CxO,EAAQ,IAAIC,KAAwB,IAAlB2N,EAASa,QAExB,IAAI3N,EAAK,CACZnB,GAAIiD,EACJtD,OAAAA,EACAkB,MAAOoN,aAAQ,EAARA,EAAUc,UACjBvO,KAAMyN,aAAQ,EAARA,EAAUe,SAChB3O,MAAAA,EACAI,KAAMwN,aAAQ,EAARA,EAAUgB,UAChBvO,aAAauN,aAAQ,EAARA,EAAUiB,oBAAoBjB,aAAQ,EAARA,EAAUvN,aACrDK,KAAM4M,EACN7M,WAAU+L,EAAAA,EAAA,GACHoB,GAAQ,IACXO,WAAAA,EACA,cAAeH,EACfc,SAAUlB,SAAc,QAANC,EAARD,EAAUmB,YAAI,IAAAlB,GAAdA,EAAgBlN,SAASqO,OAAOC,GAAGC,cAAgB,EAAI,KAG7E,CACA,MAAO5H,GAEH,OADA6H,EAAO7H,MAAM,gCAAiC,CAAEA,MAAAA,IACzC,IACX,CACJ,EACM8H,EAAY,WAAkC,IAAxBC,EAAc5C,UAAArK,OAAA,QAAAG,IAAAkK,UAAA,IAAAA,UAAA,GAChCpK,GAAMiN,EAAAA,EAAAA,gBAAe,oCAC3B,OAAOC,EAAAA,EAAMC,IAAInN,EAAK,CAClBqL,QAAAA,EACA+B,OAAQ,CACJJ,eAAAA,EACAK,cAAc,IAG1B,EAgBMC,EAAmB,WACrB,IAAMtN,GAAMiN,EAAAA,EAAAA,gBAAe,4CAC3B,OAAOC,EAAAA,EAAMC,IAAInN,EAAK,CAClBqL,QAAAA,EACA+B,OAAQ,CACJC,cAAc,IAG1B,EACME,EAAyB,WAC3B,IAAMvN,GAAMiN,EAAAA,EAAAA,gBAAe,mDAC3B,OAAOC,EAAAA,EAAMC,IAAInN,EAAK,CAClBqL,QAAAA,EACA+B,OAAQ,CACJC,cAAc,IAG1B,EACMG,EAAmB,WACrB,IAAMxN,GAAMiN,EAAAA,EAAAA,gBAAe,2CAC3B,OAAOC,EAAAA,EAAMC,IAAInN,EAAK,CAClBqL,QAAAA,EACA+B,OAAQ,CACJC,cAAc,IAG1B,EACaI,EAAW,eAjGxBnK,EAiGwBoK,GAjGxBpK,EAiGwBrC,IAAAyG,MAAG,SAAAiG,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7Q,EAAA8Q,EAAAC,EAAAhE,UAAA,OAAAnJ,IAAAwB,MAAA,SAAA4L,GAAA,cAAAA,EAAA/F,KAAA+F,EAAAnI,MAAA,OAatB,OAbmD2H,IAAgBO,EAAArO,OAAA,QAAAG,IAAAkO,EAAA,KAAAA,EAAA,GAASN,EAAaM,EAAArO,OAAA,QAAAG,IAAAkO,EAAA,IAAAA,EAAA,GAAUL,EAAaK,EAAArO,OAAA,QAAAG,IAAAkO,EAAA,IAAAA,EAAA,GAAUJ,EAAWI,EAAArO,OAAA,QAAAG,IAAAkO,EAAA,GAAAA,EAAA,GAAG,GACnIH,EAAW,MAD0BG,EAAArO,OAAA,QAAAG,IAAAkO,EAAA,KAAAA,EAAA,KAGvCH,EAASrH,KA5CNmG,GAAU,SAMX/M,KAAMiN,EAAAA,EAAAA,gBAAe,2CACpBC,EAAAA,EAAMC,IAAInN,EAAK,CAClBqL,QAAAA,EACA+B,OAAQ,CACJC,cAAc,OAoClBQ,GACAI,EAASrH,KA5CNmG,KA8CHe,GACAG,EAASrH,KAAK0G,IAAoBC,KAElCQ,GACAE,EAASrH,KAAK4G,KACjBa,EAAAnI,KAAA,GACuB6B,QAAQuG,IAAIL,GAAS,QAK5C,OALKC,EAASG,EAAA5I,KACTpI,EAAO6Q,EAAUK,KAAI,SAACC,GAAQ,OAAKA,EAASnR,KAAKoR,IAAIpR,IAAI,IAAEqR,OAC7DP,EAAW9Q,EAAKkR,IAAIjD,GAAgBvB,QAAO,SAAC4E,GAAI,OAAc,OAATA,CAAa,IAClEX,EAAYjO,OAAS,IACrBoO,EAAWA,EAASpE,QAAO,SAAC4E,GAAI,IAAAC,EAAA,OAAKZ,EAAY1P,SAAwB,QAAhBsQ,EAACD,EAAKvQ,kBAAU,IAAAwQ,OAAA,EAAfA,EAAiBC,WAAW,KACzFR,EAAAzI,OAAA,SACM,CACHkJ,OAAQ,IAAIjO,EAAO,CACfvD,GAAI,EACJL,QAAQgP,EAAAA,EAAAA,mBAAkB,MAAQhB,GAClC9M,OAAuB,QAAhByP,GAAAxC,EAAAA,EAAAA,aAAgB,IAAAwC,OAAA,EAAhBA,EAAkB7Q,MAAO,OAEpCoR,SAAAA,IACH,yBAAAE,EAAA7F,OA/DmB,IACdxI,CA8DL,GAAA2N,EAAA,IA5HL,eAAA/K,EAAA,KAAAmM,EAAA3E,UAAA,WAAArC,SAAA,SAAAtD,EAAAC,GAAA,IAAA8E,EAAAlG,EAAA4G,MAAAtH,EAAAmM,GAAA,SAAAtF,EAAAtK,GAAAoK,EAAAC,EAAA/E,EAAAC,EAAA+E,EAAAC,EAAA,OAAAvK,EAAA,UAAAuK,EAAAlH,GAAA+G,EAAAC,EAAA/E,EAAAC,EAAA+E,EAAAC,EAAA,QAAAlH,EAAA,CAAAiH,OAAAvJ,EAAA,MA6HC,kBA5BuB,OAAAwN,EAAAxD,MAAA,KAAAE,UAAA,KE1FX4E,EAAe,gBACfC,EAAsB,YACtBC,EAAyB,aACzBC,EAAuB,eACvBC,EAAsB,gBACtBC,EAAsB,2BCUnC,GAAetO,EAAAA,EAAAA,MACbnE,OAAO,SACPoE,aACAnE,2rBFHF,SAAWmO,GACPA,EAAqB,QAAI,UACzBA,EAAoB,OAAI,QAC3B,CAHD,CAGGA,IAAgBA,EAAc,CAAC,IAC3B,IAAMsE,EAAU,WAEnB,SAAAA,EAAYC,0GAAQC,CAAA,KAAAF,KAAA,2HAChBxQ,KAAK2Q,eAAeF,GACpBzQ,KAAK4Q,QAAUH,CACnB,SA+DC,SA/DAD,KAAA,EAAA5N,IAAA,KAAAyL,IACD,WACI,OAAOrO,KAAK4Q,QAAQpS,EACxB,GAAC,CAAAoE,IAAA,cAAAyL,IACD,WACI,OAAOrO,KAAK4Q,QAAQrI,WACxB,GAAC,CAAA3F,IAAA,gBAAAyL,IACD,WACI,OAAOrO,KAAK4Q,QAAQC,aACxB,GAAC,CAAAjO,IAAA,UAAAyL,IACD,WACI,OAAOrO,KAAK4Q,QAAQE,OACxB,GAAC,CAAAlO,IAAA,OAAAyL,IACD,WACI,OAAOrO,KAAK4Q,QAAQG,IACxB,GAAC,CAAAnO,IAAA,YAAAyL,IACD,WACI,OAAOrO,KAAK4Q,QAAQI,SACxB,GAAC,CAAApO,IAAA,QAAAyL,IACD,WACI,OAAOrO,KAAK4Q,QAAQK,KACxB,GAAC,CAAArO,IAAA,UAAAyL,IACD,WACI,OAAOrO,KAAK4Q,QAAQM,OACxB,GAAC,CAAAtO,IAAA,SAAAyL,IACD,WACI,OAAOrO,KAAK4Q,QAAQO,MACxB,GAAC,CAAAvO,IAAA,eAAAyL,IACD,WACI,OAAOrO,KAAK4Q,QAAQQ,YACxB,GAAC,CAAAxO,IAAA,iBAAAvC,MACD,SAAeoQ,GACX,IAAKA,EAAOjS,IAA2B,iBAAdiS,EAAOjS,GAC5B,MAAM,IAAIC,MAAM,cAEpB,IAAKgS,EAAOlI,aAA6C,mBAAvBkI,EAAOlI,YACrC,MAAM,IAAI9J,MAAM,gCAEpB,IAAKgS,EAAOI,eAAiD,mBAAzBJ,EAAOI,cACvC,MAAM,IAAIpS,MAAM,kCAEpB,IAAKgS,EAAOM,MAA+B,mBAAhBN,EAAOM,KAC9B,MAAM,IAAItS,MAAM,yBAGpB,GAAI,YAAagS,GAAoC,mBAAnBA,EAAOK,QACrC,MAAM,IAAIrS,MAAM,4BAEpB,GAAI,cAAegS,GAAsC,mBAArBA,EAAOO,UACvC,MAAM,IAAIvS,MAAM,8BAEpB,GAAI,UAAWgS,GAAkC,iBAAjBA,EAAOQ,MACnC,MAAM,IAAIxS,MAAM,iBAEpB,GAAIgS,EAAOS,UAAY5O,OAAO4C,OAAOgH,GAAa1M,SAASiR,EAAOS,SAC9D,MAAM,IAAIzS,MAAM,mBAEpB,GAAI,WAAYgS,GAAmC,mBAAlBA,EAAOU,OACpC,MAAM,IAAI1S,MAAM,2BAEpB,GAAI,iBAAkBgS,GAAyC,mBAAxBA,EAAOW,aAC1C,MAAM,IAAI3S,MAAM,gCAExB,0EAAC+R,CAAA,CApEkB,GAsEVa,EAAqB,SAAUZ,QACF,IAA3B5C,OAAOyD,kBACdzD,OAAOyD,gBAAkB,GACzBtD,EAAOuD,MAAM,4BAGb1D,OAAOyD,gBAAgBE,MAAK,SAAAC,GAAM,OAAIA,EAAOjT,KAAOiS,EAAOjS,EAAE,IAC7DwP,EAAO7H,MAAM,cAADiG,OAAeqE,EAAOjS,GAAE,uBAAuB,CAAEiS,OAAAA,IAGjE5C,OAAOyD,gBAAgBxJ,KAAK2I,EAChC,qPG3GAtO,EAAA,kBAAAC,CAAA,MAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAxC,KAAA,EAAAyC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAX,EAAAC,EAAAvC,GAAA,OAAAiC,OAAAI,eAAAC,EAAAC,EAAA,CAAAvC,MAAAA,EAAAkD,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAAC,EAAA,KAAAU,EAAA,aAAAI,GAAAJ,EAAA,SAAAX,EAAAC,EAAAvC,GAAA,OAAAsC,EAAAC,GAAAvC,CAAA,WAAAsD,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAA7D,MAAAiE,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,EAAAC,EAAA7B,EAAA8B,GAAA,WAAA3C,KAAA,SAAA2C,IAAAD,EAAAE,KAAA/B,EAAA8B,GAAA,OAAAf,GAAA,OAAA5B,KAAA,QAAA2C,IAAAf,EAAA,EAAAtB,EAAAuB,KAAAA,EAAA,IAAAgB,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAzC,OAAA0C,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA5C,GAAAG,EAAAkC,KAAAO,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAAtC,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAW,GAAA,SAAAM,EAAA7C,GAAA,0BAAA8C,SAAA,SAAAC,GAAAhC,EAAAf,EAAA+C,GAAA,SAAAb,GAAA,YAAAc,QAAAD,EAAAb,EAAA,gBAAAe,EAAAtB,EAAAuB,GAAA,SAAAC,EAAAJ,EAAAb,EAAAkB,EAAAC,GAAA,IAAAC,EAAAtB,EAAAL,EAAAoB,GAAApB,EAAAO,GAAA,aAAAoB,EAAA/D,KAAA,KAAAgE,EAAAD,EAAApB,IAAApE,EAAAyF,EAAAzF,MAAA,OAAAA,GAAA,UAAA0F,EAAA1F,IAAAmC,EAAAkC,KAAArE,EAAA,WAAAoF,EAAAE,QAAAtF,EAAA2F,SAAAC,MAAA,SAAA5F,GAAAqF,EAAA,OAAArF,EAAAsF,EAAAC,EAAA,aAAAlC,GAAAgC,EAAA,QAAAhC,EAAAiC,EAAAC,EAAA,IAAAH,EAAAE,QAAAtF,GAAA4F,MAAA,SAAAC,GAAAJ,EAAAzF,MAAA6F,EAAAP,EAAAG,EAAA,aAAAK,GAAA,OAAAT,EAAA,QAAAS,EAAAR,EAAAC,EAAA,IAAAA,EAAAC,EAAApB,IAAA,KAAA2B,EAAA1D,EAAA,gBAAArC,MAAA,SAAAiF,EAAAb,GAAA,SAAA4B,IAAA,WAAAZ,GAAA,SAAAE,EAAAC,GAAAF,EAAAJ,EAAAb,EAAAkB,EAAAC,EAAA,WAAAQ,EAAAA,EAAAA,EAAAH,KAAAI,EAAAA,GAAAA,GAAA,aAAA/B,EAAAV,EAAAE,EAAAM,GAAA,IAAAkC,EAAA,iCAAAhB,EAAAb,GAAA,iBAAA6B,EAAA,UAAA7H,MAAA,iDAAA6H,EAAA,cAAAhB,EAAA,MAAAb,EAAA,OAAApE,WAAAe,EAAAmF,MAAA,OAAAnC,EAAAkB,OAAAA,EAAAlB,EAAAK,IAAAA,IAAA,KAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,IAAAA,IAAA9B,EAAA,gBAAA8B,CAAA,cAAArC,EAAAkB,OAAAlB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,aAAAL,EAAAkB,OAAA,uBAAAgB,EAAA,MAAAA,EAAA,YAAAlC,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,IAAA,gBAAAL,EAAAkB,QAAAlB,EAAA0C,OAAA,SAAA1C,EAAAK,KAAA6B,EAAA,gBAAAT,EAAAtB,EAAAX,EAAAE,EAAAM,GAAA,cAAAyB,EAAA/D,KAAA,IAAAwE,EAAAlC,EAAAmC,KAAA,6BAAAV,EAAApB,MAAAE,EAAA,gBAAAtE,MAAAwF,EAAApB,IAAA8B,KAAAnC,EAAAmC,KAAA,WAAAV,EAAA/D,OAAAwE,EAAA,YAAAlC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAA,YAAAiC,EAAAF,EAAApC,GAAA,IAAA2C,EAAA3C,EAAAkB,OAAAA,EAAAkB,EAAAvD,SAAA8D,GAAA,QAAA3F,IAAAkE,EAAA,OAAAlB,EAAAoC,SAAA,eAAAO,GAAAP,EAAAvD,SAAA+D,SAAA5C,EAAAkB,OAAA,SAAAlB,EAAAK,SAAArD,EAAAsF,EAAAF,EAAApC,GAAA,UAAAA,EAAAkB,SAAA,WAAAyB,IAAA3C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAAF,EAAA,aAAApC,EAAA,IAAAkB,EAAAtB,EAAAe,EAAAkB,EAAAvD,SAAAmB,EAAAK,KAAA,aAAAoB,EAAA/D,KAAA,OAAAsC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAAL,EAAAoC,SAAA,KAAA7B,EAAA,IAAAuC,EAAArB,EAAApB,IAAA,OAAAyC,EAAAA,EAAAX,MAAAnC,EAAAoC,EAAAW,YAAAD,EAAA7G,MAAA+D,EAAAgD,KAAAZ,EAAAa,QAAA,WAAAjD,EAAAkB,SAAAlB,EAAAkB,OAAA,OAAAlB,EAAAK,SAAArD,GAAAgD,EAAAoC,SAAA,KAAA7B,GAAAuC,GAAA9C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAoC,SAAA,KAAA7B,EAAA,UAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAA/D,KAAA,gBAAA+D,EAAApB,IAAA+C,EAAAQ,WAAAnC,CAAA,UAAAxB,EAAAN,GAAA,KAAA8D,WAAA,EAAAJ,OAAA,SAAA1D,EAAAsB,QAAAiC,EAAA,WAAAW,OAAA,YAAA/C,EAAAgD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAlF,GAAA,GAAAmF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAjH,QAAA,KAAAoH,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAjH,QAAA,GAAAuB,EAAAkC,KAAAwD,EAAAG,GAAA,OAAAjB,EAAA/G,MAAA6H,EAAAG,GAAAjB,EAAAb,MAAA,EAAAa,EAAA,OAAAA,EAAA/G,WAAAe,EAAAgG,EAAAb,MAAA,EAAAa,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAkB,EAAA,UAAAA,IAAA,OAAAjI,WAAAe,EAAAmF,MAAA,UAAA3B,EAAArC,UAAAsC,EAAAnC,EAAAyC,EAAA,eAAA9E,MAAAwE,EAAArB,cAAA,IAAAd,EAAAmC,EAAA,eAAAxE,MAAAuE,EAAApB,cAAA,IAAAoB,EAAA2D,YAAAjF,EAAAuB,EAAAzB,EAAA,qBAAAhB,EAAAoG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAA1I,YAAA,QAAA2I,IAAAA,IAAA9D,GAAA,uBAAA8D,EAAAH,aAAAG,EAAAC,MAAA,EAAAvG,EAAAwG,KAAA,SAAAH,GAAA,OAAAnG,OAAAuG,eAAAvG,OAAAuG,eAAAJ,EAAA5D,IAAA4D,EAAAK,UAAAjE,EAAAvB,EAAAmF,EAAArF,EAAA,sBAAAqF,EAAAlG,UAAAD,OAAA6B,OAAAgB,GAAAsD,CAAA,EAAArG,EAAA2G,MAAA,SAAAtE,GAAA,OAAAuB,QAAAvB,EAAA,EAAAW,EAAAI,EAAAjD,WAAAe,EAAAkC,EAAAjD,UAAAW,GAAA,0BAAAd,EAAAoD,cAAAA,EAAApD,EAAA4G,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,IAAAA,EAAAwD,SAAA,IAAAC,EAAA,IAAA1D,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAArD,EAAAoG,oBAAA3E,GAAAqF,EAAAA,EAAA9B,OAAAnB,MAAA,SAAAH,GAAA,OAAAA,EAAAS,KAAAT,EAAAzF,MAAA6I,EAAA9B,MAAA,KAAAhC,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAA/C,EAAA+G,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAvG,KAAAyG,EAAAF,EAAArB,KAAAlF,GAAA,OAAAuG,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAlI,QAAA,KAAA2B,EAAAuG,EAAA5H,MAAA,GAAAqB,KAAAyG,EAAA,OAAAjC,EAAA/G,MAAAuC,EAAAwE,EAAAb,MAAA,EAAAa,CAAA,QAAAA,EAAAb,MAAA,EAAAa,CAAA,GAAAhF,EAAA8C,OAAAA,EAAAb,EAAA9B,UAAA,CAAAxC,YAAAsE,EAAA4D,MAAA,SAAAsB,GAAA,QAAAC,KAAA,OAAApC,KAAA,OAAAT,KAAA,KAAAC,WAAAxF,EAAA,KAAAmF,MAAA,OAAAC,SAAA,UAAAlB,OAAA,YAAAb,SAAArD,EAAA,KAAAyG,WAAAxC,QAAA0C,IAAAwB,EAAA,QAAAZ,KAAA,WAAAA,EAAAc,OAAA,IAAAjH,EAAAkC,KAAA,KAAAiE,KAAAP,OAAAO,EAAA3H,MAAA,WAAA2H,QAAAvH,EAAA,EAAAsI,KAAA,gBAAAnD,MAAA,MAAAoD,EAAA,KAAA9B,WAAA,GAAAG,WAAA,aAAA2B,EAAA7H,KAAA,MAAA6H,EAAAlF,IAAA,YAAAmF,IAAA,EAAA/C,kBAAA,SAAAgD,GAAA,QAAAtD,KAAA,MAAAsD,EAAA,IAAAzF,EAAA,cAAA0F,EAAAC,EAAAC,GAAA,OAAAnE,EAAA/D,KAAA,QAAA+D,EAAApB,IAAAoF,EAAAzF,EAAAgD,KAAA2C,EAAAC,IAAA5F,EAAAkB,OAAA,OAAAlB,EAAAK,SAAArD,KAAA4I,CAAA,SAAA3B,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAAxC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAqC,EAAA,UAAAtC,EAAAC,QAAA,KAAA+B,KAAA,KAAAS,EAAAzH,EAAAkC,KAAA8C,EAAA,YAAA0C,EAAA1H,EAAAkC,KAAA8C,EAAA,iBAAAyC,GAAAC,EAAA,SAAAV,KAAAhC,EAAAE,SAAA,OAAAoC,EAAAtC,EAAAE,UAAA,WAAA8B,KAAAhC,EAAAG,WAAA,OAAAmC,EAAAtC,EAAAG,WAAA,SAAAsC,GAAA,QAAAT,KAAAhC,EAAAE,SAAA,OAAAoC,EAAAtC,EAAAE,UAAA,YAAAwC,EAAA,UAAAzL,MAAA,kDAAA+K,KAAAhC,EAAAG,WAAA,OAAAmC,EAAAtC,EAAAG,WAAA,KAAAb,OAAA,SAAAhF,EAAA2C,GAAA,QAAA4D,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,QAAA,KAAA+B,MAAAhH,EAAAkC,KAAA8C,EAAA,oBAAAgC,KAAAhC,EAAAG,WAAA,KAAAwC,EAAA3C,EAAA,OAAA2C,IAAA,UAAArI,GAAA,aAAAA,IAAAqI,EAAA1C,QAAAhD,GAAAA,GAAA0F,EAAAxC,aAAAwC,EAAA,UAAAtE,EAAAsE,EAAAA,EAAAnC,WAAA,UAAAnC,EAAA/D,KAAAA,EAAA+D,EAAApB,IAAAA,EAAA0F,GAAA,KAAA7E,OAAA,YAAA8B,KAAA+C,EAAAxC,WAAAhD,GAAA,KAAAyF,SAAAvE,EAAA,EAAAuE,SAAA,SAAAvE,EAAA+B,GAAA,aAAA/B,EAAA/D,KAAA,MAAA+D,EAAApB,IAAA,gBAAAoB,EAAA/D,MAAA,aAAA+D,EAAA/D,KAAA,KAAAsF,KAAAvB,EAAApB,IAAA,WAAAoB,EAAA/D,MAAA,KAAA8H,KAAA,KAAAnF,IAAAoB,EAAApB,IAAA,KAAAa,OAAA,cAAA8B,KAAA,kBAAAvB,EAAA/D,MAAA8F,IAAA,KAAAR,KAAAQ,GAAAjD,CAAA,EAAA0F,OAAA,SAAA1C,GAAA,QAAAU,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAG,aAAAA,EAAA,YAAAyC,SAAA5C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,CAAA,GAAA2F,MAAA,SAAA7C,GAAA,QAAAY,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,SAAAA,EAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAA/D,KAAA,KAAAyI,EAAA1E,EAAApB,IAAAsD,EAAAP,EAAA,QAAA+C,CAAA,YAAA9L,MAAA,0BAAA+L,cAAA,SAAAtC,EAAAf,EAAAE,GAAA,YAAAb,SAAA,CAAAvD,SAAAiC,EAAAgD,GAAAf,WAAAA,EAAAE,QAAAA,GAAA,cAAA/B,SAAA,KAAAb,SAAArD,GAAAuD,CAAA,GAAAvC,CAAA,UAAAqI,EAAAC,EAAA/E,EAAAC,EAAA+E,EAAAC,EAAAhI,EAAA6B,GAAA,QAAAyC,EAAAwD,EAAA9H,GAAA6B,GAAApE,EAAA6G,EAAA7G,KAAA,OAAA8F,GAAA,YAAAP,EAAAO,EAAA,CAAAe,EAAAX,KAAAZ,EAAAtF,GAAA4I,QAAAtD,QAAAtF,GAAA4F,KAAA0E,EAAAC,EAAA,UAAA8G,EAAAlN,GAAA,sBAAAV,EAAA,KAAAmM,EAAA3E,UAAA,WAAArC,SAAA,SAAAtD,EAAAC,GAAA,IAAA8E,EAAAlG,EAAA4G,MAAAtH,EAAAmM,GAAA,SAAAtF,EAAAtK,GAAAoK,EAAAC,EAAA/E,EAAAC,EAAA+E,EAAAC,EAAA,OAAAvK,EAAA,UAAAuK,EAAAlH,GAAA+G,EAAAC,EAAA/E,EAAAC,EAAA+E,EAAAC,EAAA,QAAAlH,EAAA,CAAAiH,OAAAvJ,EAAA,wPCAAe,EAAA,kBAAAC,CAAA,MAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAxC,KAAA,EAAAyC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAX,EAAAC,EAAAvC,GAAA,OAAAiC,OAAAI,eAAAC,EAAAC,EAAA,CAAAvC,MAAAA,EAAAkD,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAAC,EAAA,KAAAU,EAAA,aAAAI,GAAAJ,EAAA,SAAAX,EAAAC,EAAAvC,GAAA,OAAAsC,EAAAC,GAAAvC,CAAA,WAAAsD,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAA7D,MAAAiE,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,EAAAC,EAAA7B,EAAA8B,GAAA,WAAA3C,KAAA,SAAA2C,IAAAD,EAAAE,KAAA/B,EAAA8B,GAAA,OAAAf,GAAA,OAAA5B,KAAA,QAAA2C,IAAAf,EAAA,EAAAtB,EAAAuB,KAAAA,EAAA,IAAAgB,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAzC,OAAA0C,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA5C,GAAAG,EAAAkC,KAAAO,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAAtC,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAW,GAAA,SAAAM,EAAA7C,GAAA,0BAAA8C,SAAA,SAAAC,GAAAhC,EAAAf,EAAA+C,GAAA,SAAAb,GAAA,YAAAc,QAAAD,EAAAb,EAAA,gBAAAe,EAAAtB,EAAAuB,GAAA,SAAAC,EAAAJ,EAAAb,EAAAkB,EAAAC,GAAA,IAAAC,EAAAtB,EAAAL,EAAAoB,GAAApB,EAAAO,GAAA,aAAAoB,EAAA/D,KAAA,KAAAgE,EAAAD,EAAApB,IAAApE,EAAAyF,EAAAzF,MAAA,OAAAA,GAAA,UAAA0F,EAAA1F,IAAAmC,EAAAkC,KAAArE,EAAA,WAAAoF,EAAAE,QAAAtF,EAAA2F,SAAAC,MAAA,SAAA5F,GAAAqF,EAAA,OAAArF,EAAAsF,EAAAC,EAAA,aAAAlC,GAAAgC,EAAA,QAAAhC,EAAAiC,EAAAC,EAAA,IAAAH,EAAAE,QAAAtF,GAAA4F,MAAA,SAAAC,GAAAJ,EAAAzF,MAAA6F,EAAAP,EAAAG,EAAA,aAAAK,GAAA,OAAAT,EAAA,QAAAS,EAAAR,EAAAC,EAAA,IAAAA,EAAAC,EAAApB,IAAA,KAAA2B,EAAA1D,EAAA,gBAAArC,MAAA,SAAAiF,EAAAb,GAAA,SAAA4B,IAAA,WAAAZ,GAAA,SAAAE,EAAAC,GAAAF,EAAAJ,EAAAb,EAAAkB,EAAAC,EAAA,WAAAQ,EAAAA,EAAAA,EAAAH,KAAAI,EAAAA,GAAAA,GAAA,aAAA/B,EAAAV,EAAAE,EAAAM,GAAA,IAAAkC,EAAA,iCAAAhB,EAAAb,GAAA,iBAAA6B,EAAA,UAAA7H,MAAA,iDAAA6H,EAAA,cAAAhB,EAAA,MAAAb,EAAA,OAAApE,WAAAe,EAAAmF,MAAA,OAAAnC,EAAAkB,OAAAA,EAAAlB,EAAAK,IAAAA,IAAA,KAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,IAAAA,IAAA9B,EAAA,gBAAA8B,CAAA,cAAArC,EAAAkB,OAAAlB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,aAAAL,EAAAkB,OAAA,uBAAAgB,EAAA,MAAAA,EAAA,YAAAlC,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,IAAA,gBAAAL,EAAAkB,QAAAlB,EAAA0C,OAAA,SAAA1C,EAAAK,KAAA6B,EAAA,gBAAAT,EAAAtB,EAAAX,EAAAE,EAAAM,GAAA,cAAAyB,EAAA/D,KAAA,IAAAwE,EAAAlC,EAAAmC,KAAA,6BAAAV,EAAApB,MAAAE,EAAA,gBAAAtE,MAAAwF,EAAApB,IAAA8B,KAAAnC,EAAAmC,KAAA,WAAAV,EAAA/D,OAAAwE,EAAA,YAAAlC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAA,YAAAiC,EAAAF,EAAApC,GAAA,IAAA2C,EAAA3C,EAAAkB,OAAAA,EAAAkB,EAAAvD,SAAA8D,GAAA,QAAA3F,IAAAkE,EAAA,OAAAlB,EAAAoC,SAAA,eAAAO,GAAAP,EAAAvD,SAAA+D,SAAA5C,EAAAkB,OAAA,SAAAlB,EAAAK,SAAArD,EAAAsF,EAAAF,EAAApC,GAAA,UAAAA,EAAAkB,SAAA,WAAAyB,IAAA3C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAAF,EAAA,aAAApC,EAAA,IAAAkB,EAAAtB,EAAAe,EAAAkB,EAAAvD,SAAAmB,EAAAK,KAAA,aAAAoB,EAAA/D,KAAA,OAAAsC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAAL,EAAAoC,SAAA,KAAA7B,EAAA,IAAAuC,EAAArB,EAAApB,IAAA,OAAAyC,EAAAA,EAAAX,MAAAnC,EAAAoC,EAAAW,YAAAD,EAAA7G,MAAA+D,EAAAgD,KAAAZ,EAAAa,QAAA,WAAAjD,EAAAkB,SAAAlB,EAAAkB,OAAA,OAAAlB,EAAAK,SAAArD,GAAAgD,EAAAoC,SAAA,KAAA7B,GAAAuC,GAAA9C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAoC,SAAA,KAAA7B,EAAA,UAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAA/D,KAAA,gBAAA+D,EAAApB,IAAA+C,EAAAQ,WAAAnC,CAAA,UAAAxB,EAAAN,GAAA,KAAA8D,WAAA,EAAAJ,OAAA,SAAA1D,EAAAsB,QAAAiC,EAAA,WAAAW,OAAA,YAAA/C,EAAAgD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAlF,GAAA,GAAAmF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAjH,QAAA,KAAAoH,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAjH,QAAA,GAAAuB,EAAAkC,KAAAwD,EAAAG,GAAA,OAAAjB,EAAA/G,MAAA6H,EAAAG,GAAAjB,EAAAb,MAAA,EAAAa,EAAA,OAAAA,EAAA/G,WAAAe,EAAAgG,EAAAb,MAAA,EAAAa,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAkB,EAAA,UAAAA,IAAA,OAAAjI,WAAAe,EAAAmF,MAAA,UAAA3B,EAAArC,UAAAsC,EAAAnC,EAAAyC,EAAA,eAAA9E,MAAAwE,EAAArB,cAAA,IAAAd,EAAAmC,EAAA,eAAAxE,MAAAuE,EAAApB,cAAA,IAAAoB,EAAA2D,YAAAjF,EAAAuB,EAAAzB,EAAA,qBAAAhB,EAAAoG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAA1I,YAAA,QAAA2I,IAAAA,IAAA9D,GAAA,uBAAA8D,EAAAH,aAAAG,EAAAC,MAAA,EAAAvG,EAAAwG,KAAA,SAAAH,GAAA,OAAAnG,OAAAuG,eAAAvG,OAAAuG,eAAAJ,EAAA5D,IAAA4D,EAAAK,UAAAjE,EAAAvB,EAAAmF,EAAArF,EAAA,sBAAAqF,EAAAlG,UAAAD,OAAA6B,OAAAgB,GAAAsD,CAAA,EAAArG,EAAA2G,MAAA,SAAAtE,GAAA,OAAAuB,QAAAvB,EAAA,EAAAW,EAAAI,EAAAjD,WAAAe,EAAAkC,EAAAjD,UAAAW,GAAA,0BAAAd,EAAAoD,cAAAA,EAAApD,EAAA4G,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,IAAAA,EAAAwD,SAAA,IAAAC,EAAA,IAAA1D,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAArD,EAAAoG,oBAAA3E,GAAAqF,EAAAA,EAAA9B,OAAAnB,MAAA,SAAAH,GAAA,OAAAA,EAAAS,KAAAT,EAAAzF,MAAA6I,EAAA9B,MAAA,KAAAhC,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAA/C,EAAA+G,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAvG,KAAAyG,EAAAF,EAAArB,KAAAlF,GAAA,OAAAuG,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAlI,QAAA,KAAA2B,EAAAuG,EAAA5H,MAAA,GAAAqB,KAAAyG,EAAA,OAAAjC,EAAA/G,MAAAuC,EAAAwE,EAAAb,MAAA,EAAAa,CAAA,QAAAA,EAAAb,MAAA,EAAAa,CAAA,GAAAhF,EAAA8C,OAAAA,EAAAb,EAAA9B,UAAA,CAAAxC,YAAAsE,EAAA4D,MAAA,SAAAsB,GAAA,QAAAC,KAAA,OAAApC,KAAA,OAAAT,KAAA,KAAAC,WAAAxF,EAAA,KAAAmF,MAAA,OAAAC,SAAA,UAAAlB,OAAA,YAAAb,SAAArD,EAAA,KAAAyG,WAAAxC,QAAA0C,IAAAwB,EAAA,QAAAZ,KAAA,WAAAA,EAAAc,OAAA,IAAAjH,EAAAkC,KAAA,KAAAiE,KAAAP,OAAAO,EAAA3H,MAAA,WAAA2H,QAAAvH,EAAA,EAAAsI,KAAA,gBAAAnD,MAAA,MAAAoD,EAAA,KAAA9B,WAAA,GAAAG,WAAA,aAAA2B,EAAA7H,KAAA,MAAA6H,EAAAlF,IAAA,YAAAmF,IAAA,EAAA/C,kBAAA,SAAAgD,GAAA,QAAAtD,KAAA,MAAAsD,EAAA,IAAAzF,EAAA,cAAA0F,EAAAC,EAAAC,GAAA,OAAAnE,EAAA/D,KAAA,QAAA+D,EAAApB,IAAAoF,EAAAzF,EAAAgD,KAAA2C,EAAAC,IAAA5F,EAAAkB,OAAA,OAAAlB,EAAAK,SAAArD,KAAA4I,CAAA,SAAA3B,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAAxC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAqC,EAAA,UAAAtC,EAAAC,QAAA,KAAA+B,KAAA,KAAAS,EAAAzH,EAAAkC,KAAA8C,EAAA,YAAA0C,EAAA1H,EAAAkC,KAAA8C,EAAA,iBAAAyC,GAAAC,EAAA,SAAAV,KAAAhC,EAAAE,SAAA,OAAAoC,EAAAtC,EAAAE,UAAA,WAAA8B,KAAAhC,EAAAG,WAAA,OAAAmC,EAAAtC,EAAAG,WAAA,SAAAsC,GAAA,QAAAT,KAAAhC,EAAAE,SAAA,OAAAoC,EAAAtC,EAAAE,UAAA,YAAAwC,EAAA,UAAAzL,MAAA,kDAAA+K,KAAAhC,EAAAG,WAAA,OAAAmC,EAAAtC,EAAAG,WAAA,KAAAb,OAAA,SAAAhF,EAAA2C,GAAA,QAAA4D,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,QAAA,KAAA+B,MAAAhH,EAAAkC,KAAA8C,EAAA,oBAAAgC,KAAAhC,EAAAG,WAAA,KAAAwC,EAAA3C,EAAA,OAAA2C,IAAA,UAAArI,GAAA,aAAAA,IAAAqI,EAAA1C,QAAAhD,GAAAA,GAAA0F,EAAAxC,aAAAwC,EAAA,UAAAtE,EAAAsE,EAAAA,EAAAnC,WAAA,UAAAnC,EAAA/D,KAAAA,EAAA+D,EAAApB,IAAAA,EAAA0F,GAAA,KAAA7E,OAAA,YAAA8B,KAAA+C,EAAAxC,WAAAhD,GAAA,KAAAyF,SAAAvE,EAAA,EAAAuE,SAAA,SAAAvE,EAAA+B,GAAA,aAAA/B,EAAA/D,KAAA,MAAA+D,EAAApB,IAAA,gBAAAoB,EAAA/D,MAAA,aAAA+D,EAAA/D,KAAA,KAAAsF,KAAAvB,EAAApB,IAAA,WAAAoB,EAAA/D,MAAA,KAAA8H,KAAA,KAAAnF,IAAAoB,EAAApB,IAAA,KAAAa,OAAA,cAAA8B,KAAA,kBAAAvB,EAAA/D,MAAA8F,IAAA,KAAAR,KAAAQ,GAAAjD,CAAA,EAAA0F,OAAA,SAAA1C,GAAA,QAAAU,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAG,aAAAA,EAAA,YAAAyC,SAAA5C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,CAAA,GAAA2F,MAAA,SAAA7C,GAAA,QAAAY,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,SAAAA,EAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAA/D,KAAA,KAAAyI,EAAA1E,EAAApB,IAAAsD,EAAAP,EAAA,QAAA+C,CAAA,YAAA9L,MAAA,0BAAA+L,cAAA,SAAAtC,EAAAf,EAAAE,GAAA,YAAAb,SAAA,CAAAvD,SAAAiC,EAAAgD,GAAAf,WAAAA,EAAAE,QAAAA,GAAA,cAAA/B,SAAA,KAAAb,SAAArD,GAAAuD,CAAA,GAAAvC,CAAA,UAAAqI,EAAAC,EAAA/E,EAAAC,EAAA+E,EAAAC,EAAAhI,EAAA6B,GAAA,QAAAyC,EAAAwD,EAAA9H,GAAA6B,GAAApE,EAAA6G,EAAA7G,KAAA,OAAA8F,GAAA,YAAAP,EAAAO,EAAA,CAAAe,EAAAX,KAAAZ,EAAAtF,GAAA4I,QAAAtD,QAAAtF,GAAA4F,KAAA0E,EAAAC,EAAA,CDiCAyG,EA3BsB,IAAIb,EAAW,CACjChS,GAAI,eACJ+J,YAAa,SAACoJ,GAAK,OAAKC,EAAAA,EAAAA,IAAE,gBAAiB,eAAgB,gBAAiBD,EAAM1Q,OAAO,EACzF4P,cAAe,wKAAc,EAC7BC,QAAS,SAACa,EAAOE,GAAI,OAAKF,EAAM1Q,OAAS,GAAK4Q,EAAKrT,KAAO+R,CAAmB,EACvEQ,KAAI,SAAClB,GAAM,OAAA6B,EAAAvP,IAAAyG,MAAA,SAAAiG,IAAA,IAAAiD,EAAA5Q,EAAA,OAAAiB,IAAAwB,MAAA,SAAA4L,GAAA,cAAAA,EAAA/F,KAAA+F,EAAAnI,MAAA,OAMP,OANOmI,EAAA/F,KAAA,EAEHsI,IAAajC,EAAKvQ,WAAWyS,OAC7B7Q,GAAMiN,EAAAA,EAAAA,gBAAe,qDAAsD,CAC7E6D,UAAWF,EAAW,gBAAkB,SACxCtT,GAAIqR,EAAKvQ,WAAWd,KACtB+Q,EAAAnI,KAAA,EACIgH,EAAAA,EAAM6D,KAAK/Q,GAAI,OAEY,OAAjCgR,EAAAA,EAAAA,IAAK,qBAAsBrC,GAAMN,EAAAzI,OAAA,UAC1B,GAAI,cAAAyI,EAAA/F,KAAA,EAAA+F,EAAA4C,GAAA5C,EAAA,SAAAA,EAAAzI,OAAA,UAGJ,GAAK,yBAAAyI,EAAA7F,OAAA,GAAAmF,EAAA,iBAbH6C,EAejB,EACMV,UAAS,SAACW,EAAOE,EAAMO,GAAK,IAAAC,EAAA,YAAAX,EAAAvP,IAAAyG,MAAA,SAAA0J,IAAA,OAAAnQ,IAAAwB,MAAA,SAAA4O,GAAA,cAAAA,EAAA/I,KAAA+I,EAAAnL,MAAA,cAAAmL,EAAAzL,OAAA,SACvBmC,QAAQuG,IAAImC,EAAMlC,KAAI,SAAAI,GAAI,OAAIwC,EAAKtB,KAAKlB,EAAMgC,EAAMO,EAAI,MAAE,wBAAAG,EAAA7I,OAAA,GAAA4I,EAAA,IADnCZ,EAElC,EACAT,MAAO,EACPE,OAAQ,kBAAM,CAAI,KCRf,IHTGqB,GGSG/B,GAAS,IAAID,EAAW,CACjChS,GAAI,gBACJ+J,YAAa,kBAAMkK,EAAAA,EAAAA,IAAE,QAAS,gBAAgB,EAC9C5B,cAAe,iBAAM,EAAE,EACvBC,QAAS,SAACa,EAAOE,GAAI,MAAK,CACtB3B,EACAC,EACAC,EACAC,GAGF7Q,SAASqS,EAAKrT,GAAG,EACbuS,KAAI,SAAClB,GAAM,OAnCrBrL,EAmCqBrC,IAAAyG,MAAA,SAAAiG,IAAA,OAAA1M,IAAAwB,MAAA,SAAA4L,GAAA,cAAAA,EAAA/F,KAAA+F,EAAAnI,MAAA,OAEuE,OADpFyG,OAAO6E,IAAIC,MAAMC,OAAOC,UAAU,KAClC,CAAEhB,KAAM,QAASpQ,OAAQoO,EAAKpO,QAAU,CAAE2Q,IAAKvC,EAAKhP,QAASY,OAAQoO,EAAKpO,SAAU8N,EAAAzI,OAAA,SAC7E,MAAI,wBAAAyI,EAAA7F,OAAA,GAAAmF,EAAA,IAtCnB,eAAA/K,EAAA,KAAAmM,EAAA3E,UAAA,WAAArC,SAAA,SAAAtD,EAAAC,GAAA,IAAA8E,EAAAlG,EAAA4G,MAAAtH,EAAAmM,GAAA,SAAAtF,EAAAtK,GAAAoK,EAAAC,EAAA/E,EAAAC,EAAA+E,EAAAC,EAAA,OAAAvK,EAAA,UAAAuK,EAAAlH,GAAA+G,EAAAC,EAAA/E,EAAAC,EAAA+E,EAAAC,EAAA,QAAAlH,EAAA,CAAAiH,OAAAvJ,EAAA,YAAAoD,CAuCI,EACA0M,QAAShF,EAAY4G,OAErB7B,OAAQ,6PC1CZ9O,GAAA,kBAAAC,CAAA,MAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAxC,KAAA,EAAAyC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAX,EAAAC,EAAAvC,GAAA,OAAAiC,OAAAI,eAAAC,EAAAC,EAAA,CAAAvC,MAAAA,EAAAkD,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAAC,EAAA,KAAAU,EAAA,aAAAI,GAAAJ,EAAA,SAAAX,EAAAC,EAAAvC,GAAA,OAAAsC,EAAAC,GAAAvC,CAAA,WAAAsD,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAA7D,MAAAiE,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,EAAAC,EAAA7B,EAAA8B,GAAA,WAAA3C,KAAA,SAAA2C,IAAAD,EAAAE,KAAA/B,EAAA8B,GAAA,OAAAf,GAAA,OAAA5B,KAAA,QAAA2C,IAAAf,EAAA,EAAAtB,EAAAuB,KAAAA,EAAA,IAAAgB,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAzC,OAAA0C,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA5C,GAAAG,EAAAkC,KAAAO,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAAtC,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAW,GAAA,SAAAM,EAAA7C,GAAA,0BAAA8C,SAAA,SAAAC,GAAAhC,EAAAf,EAAA+C,GAAA,SAAAb,GAAA,YAAAc,QAAAD,EAAAb,EAAA,gBAAAe,EAAAtB,EAAAuB,GAAA,SAAAC,EAAAJ,EAAAb,EAAAkB,EAAAC,GAAA,IAAAC,EAAAtB,EAAAL,EAAAoB,GAAApB,EAAAO,GAAA,aAAAoB,EAAA/D,KAAA,KAAAgE,EAAAD,EAAApB,IAAApE,EAAAyF,EAAAzF,MAAA,OAAAA,GAAA,UAAA0F,GAAA1F,IAAAmC,EAAAkC,KAAArE,EAAA,WAAAoF,EAAAE,QAAAtF,EAAA2F,SAAAC,MAAA,SAAA5F,GAAAqF,EAAA,OAAArF,EAAAsF,EAAAC,EAAA,aAAAlC,GAAAgC,EAAA,QAAAhC,EAAAiC,EAAAC,EAAA,IAAAH,EAAAE,QAAAtF,GAAA4F,MAAA,SAAAC,GAAAJ,EAAAzF,MAAA6F,EAAAP,EAAAG,EAAA,aAAAK,GAAA,OAAAT,EAAA,QAAAS,EAAAR,EAAAC,EAAA,IAAAA,EAAAC,EAAApB,IAAA,KAAA2B,EAAA1D,EAAA,gBAAArC,MAAA,SAAAiF,EAAAb,GAAA,SAAA4B,IAAA,WAAAZ,GAAA,SAAAE,EAAAC,GAAAF,EAAAJ,EAAAb,EAAAkB,EAAAC,EAAA,WAAAQ,EAAAA,EAAAA,EAAAH,KAAAI,EAAAA,GAAAA,GAAA,aAAA/B,EAAAV,EAAAE,EAAAM,GAAA,IAAAkC,EAAA,iCAAAhB,EAAAb,GAAA,iBAAA6B,EAAA,UAAA7H,MAAA,iDAAA6H,EAAA,cAAAhB,EAAA,MAAAb,EAAA,OAAApE,WAAAe,EAAAmF,MAAA,OAAAnC,EAAAkB,OAAAA,EAAAlB,EAAAK,IAAAA,IAAA,KAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,IAAAA,IAAA9B,EAAA,gBAAA8B,CAAA,cAAArC,EAAAkB,OAAAlB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,aAAAL,EAAAkB,OAAA,uBAAAgB,EAAA,MAAAA,EAAA,YAAAlC,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,IAAA,gBAAAL,EAAAkB,QAAAlB,EAAA0C,OAAA,SAAA1C,EAAAK,KAAA6B,EAAA,gBAAAT,EAAAtB,EAAAX,EAAAE,EAAAM,GAAA,cAAAyB,EAAA/D,KAAA,IAAAwE,EAAAlC,EAAAmC,KAAA,6BAAAV,EAAApB,MAAAE,EAAA,gBAAAtE,MAAAwF,EAAApB,IAAA8B,KAAAnC,EAAAmC,KAAA,WAAAV,EAAA/D,OAAAwE,EAAA,YAAAlC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAA,YAAAiC,EAAAF,EAAApC,GAAA,IAAA2C,EAAA3C,EAAAkB,OAAAA,EAAAkB,EAAAvD,SAAA8D,GAAA,QAAA3F,IAAAkE,EAAA,OAAAlB,EAAAoC,SAAA,eAAAO,GAAAP,EAAAvD,SAAA+D,SAAA5C,EAAAkB,OAAA,SAAAlB,EAAAK,SAAArD,EAAAsF,EAAAF,EAAApC,GAAA,UAAAA,EAAAkB,SAAA,WAAAyB,IAAA3C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAAF,EAAA,aAAApC,EAAA,IAAAkB,EAAAtB,EAAAe,EAAAkB,EAAAvD,SAAAmB,EAAAK,KAAA,aAAAoB,EAAA/D,KAAA,OAAAsC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAAL,EAAAoC,SAAA,KAAA7B,EAAA,IAAAuC,EAAArB,EAAApB,IAAA,OAAAyC,EAAAA,EAAAX,MAAAnC,EAAAoC,EAAAW,YAAAD,EAAA7G,MAAA+D,EAAAgD,KAAAZ,EAAAa,QAAA,WAAAjD,EAAAkB,SAAAlB,EAAAkB,OAAA,OAAAlB,EAAAK,SAAArD,GAAAgD,EAAAoC,SAAA,KAAA7B,GAAAuC,GAAA9C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAoC,SAAA,KAAA7B,EAAA,UAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAA/D,KAAA,gBAAA+D,EAAApB,IAAA+C,EAAAQ,WAAAnC,CAAA,UAAAxB,EAAAN,GAAA,KAAA8D,WAAA,EAAAJ,OAAA,SAAA1D,EAAAsB,QAAAiC,EAAA,WAAAW,OAAA,YAAA/C,EAAAgD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAlF,GAAA,GAAAmF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAjH,QAAA,KAAAoH,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAjH,QAAA,GAAAuB,EAAAkC,KAAAwD,EAAAG,GAAA,OAAAjB,EAAA/G,MAAA6H,EAAAG,GAAAjB,EAAAb,MAAA,EAAAa,EAAA,OAAAA,EAAA/G,WAAAe,EAAAgG,EAAAb,MAAA,EAAAa,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAkB,EAAA,UAAAA,IAAA,OAAAjI,WAAAe,EAAAmF,MAAA,UAAA3B,EAAArC,UAAAsC,EAAAnC,EAAAyC,EAAA,eAAA9E,MAAAwE,EAAArB,cAAA,IAAAd,EAAAmC,EAAA,eAAAxE,MAAAuE,EAAApB,cAAA,IAAAoB,EAAA2D,YAAAjF,EAAAuB,EAAAzB,EAAA,qBAAAhB,EAAAoG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAA1I,YAAA,QAAA2I,IAAAA,IAAA9D,GAAA,uBAAA8D,EAAAH,aAAAG,EAAAC,MAAA,EAAAvG,EAAAwG,KAAA,SAAAH,GAAA,OAAAnG,OAAAuG,eAAAvG,OAAAuG,eAAAJ,EAAA5D,IAAA4D,EAAAK,UAAAjE,EAAAvB,EAAAmF,EAAArF,EAAA,sBAAAqF,EAAAlG,UAAAD,OAAA6B,OAAAgB,GAAAsD,CAAA,EAAArG,EAAA2G,MAAA,SAAAtE,GAAA,OAAAuB,QAAAvB,EAAA,EAAAW,EAAAI,EAAAjD,WAAAe,EAAAkC,EAAAjD,UAAAW,GAAA,0BAAAd,EAAAoD,cAAAA,EAAApD,EAAA4G,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,IAAAA,EAAAwD,SAAA,IAAAC,EAAA,IAAA1D,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAArD,EAAAoG,oBAAA3E,GAAAqF,EAAAA,EAAA9B,OAAAnB,MAAA,SAAAH,GAAA,OAAAA,EAAAS,KAAAT,EAAAzF,MAAA6I,EAAA9B,MAAA,KAAAhC,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAA/C,EAAA+G,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAvG,KAAAyG,EAAAF,EAAArB,KAAAlF,GAAA,OAAAuG,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAlI,QAAA,KAAA2B,EAAAuG,EAAA5H,MAAA,GAAAqB,KAAAyG,EAAA,OAAAjC,EAAA/G,MAAAuC,EAAAwE,EAAAb,MAAA,EAAAa,CAAA,QAAAA,EAAAb,MAAA,EAAAa,CAAA,GAAAhF,EAAA8C,OAAAA,EAAAb,EAAA9B,UAAA,CAAAxC,YAAAsE,EAAA4D,MAAA,SAAAsB,GAAA,QAAAC,KAAA,OAAApC,KAAA,OAAAT,KAAA,KAAAC,WAAAxF,EAAA,KAAAmF,MAAA,OAAAC,SAAA,UAAAlB,OAAA,YAAAb,SAAArD,EAAA,KAAAyG,WAAAxC,QAAA0C,IAAAwB,EAAA,QAAAZ,KAAA,WAAAA,EAAAc,OAAA,IAAAjH,EAAAkC,KAAA,KAAAiE,KAAAP,OAAAO,EAAA3H,MAAA,WAAA2H,QAAAvH,EAAA,EAAAsI,KAAA,gBAAAnD,MAAA,MAAAoD,EAAA,KAAA9B,WAAA,GAAAG,WAAA,aAAA2B,EAAA7H,KAAA,MAAA6H,EAAAlF,IAAA,YAAAmF,IAAA,EAAA/C,kBAAA,SAAAgD,GAAA,QAAAtD,KAAA,MAAAsD,EAAA,IAAAzF,EAAA,cAAA0F,EAAAC,EAAAC,GAAA,OAAAnE,EAAA/D,KAAA,QAAA+D,EAAApB,IAAAoF,EAAAzF,EAAAgD,KAAA2C,EAAAC,IAAA5F,EAAAkB,OAAA,OAAAlB,EAAAK,SAAArD,KAAA4I,CAAA,SAAA3B,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAAxC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAqC,EAAA,UAAAtC,EAAAC,QAAA,KAAA+B,KAAA,KAAAS,EAAAzH,EAAAkC,KAAA8C,EAAA,YAAA0C,EAAA1H,EAAAkC,KAAA8C,EAAA,iBAAAyC,GAAAC,EAAA,SAAAV,KAAAhC,EAAAE,SAAA,OAAAoC,EAAAtC,EAAAE,UAAA,WAAA8B,KAAAhC,EAAAG,WAAA,OAAAmC,EAAAtC,EAAAG,WAAA,SAAAsC,GAAA,QAAAT,KAAAhC,EAAAE,SAAA,OAAAoC,EAAAtC,EAAAE,UAAA,YAAAwC,EAAA,UAAAzL,MAAA,kDAAA+K,KAAAhC,EAAAG,WAAA,OAAAmC,EAAAtC,EAAAG,WAAA,KAAAb,OAAA,SAAAhF,EAAA2C,GAAA,QAAA4D,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,QAAA,KAAA+B,MAAAhH,EAAAkC,KAAA8C,EAAA,oBAAAgC,KAAAhC,EAAAG,WAAA,KAAAwC,EAAA3C,EAAA,OAAA2C,IAAA,UAAArI,GAAA,aAAAA,IAAAqI,EAAA1C,QAAAhD,GAAAA,GAAA0F,EAAAxC,aAAAwC,EAAA,UAAAtE,EAAAsE,EAAAA,EAAAnC,WAAA,UAAAnC,EAAA/D,KAAAA,EAAA+D,EAAApB,IAAAA,EAAA0F,GAAA,KAAA7E,OAAA,YAAA8B,KAAA+C,EAAAxC,WAAAhD,GAAA,KAAAyF,SAAAvE,EAAA,EAAAuE,SAAA,SAAAvE,EAAA+B,GAAA,aAAA/B,EAAA/D,KAAA,MAAA+D,EAAApB,IAAA,gBAAAoB,EAAA/D,MAAA,aAAA+D,EAAA/D,KAAA,KAAAsF,KAAAvB,EAAApB,IAAA,WAAAoB,EAAA/D,MAAA,KAAA8H,KAAA,KAAAnF,IAAAoB,EAAApB,IAAA,KAAAa,OAAA,cAAA8B,KAAA,kBAAAvB,EAAA/D,MAAA8F,IAAA,KAAAR,KAAAQ,GAAAjD,CAAA,EAAA0F,OAAA,SAAA1C,GAAA,QAAAU,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAG,aAAAA,EAAA,YAAAyC,SAAA5C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,CAAA,GAAA2F,MAAA,SAAA7C,GAAA,QAAAY,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,SAAAA,EAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAA/D,KAAA,KAAAyI,EAAA1E,EAAApB,IAAAsD,EAAAP,EAAA,QAAA+C,CAAA,YAAA9L,MAAA,0BAAA+L,cAAA,SAAAtC,EAAAf,EAAAE,GAAA,YAAAb,SAAA,CAAAvD,SAAAiC,EAAAgD,GAAAf,WAAAA,EAAAE,QAAAA,GAAA,cAAA/B,SAAA,KAAAb,SAAArD,GAAAuD,CAAA,GAAAvC,CAAA,UAAAqI,GAAAC,EAAA/E,EAAAC,EAAA+E,EAAAC,EAAAhI,EAAA6B,GAAA,QAAAyC,EAAAwD,EAAA9H,GAAA6B,GAAApE,EAAA6G,EAAA7G,KAAA,OAAA8F,GAAA,YAAAP,EAAAO,EAAA,CAAAe,EAAAX,KAAAZ,EAAAtF,GAAA4I,QAAAtD,QAAAtF,GAAA4F,KAAA0E,EAAAC,EAAA,UAAA8G,GAAAlN,GAAA,sBAAAV,EAAA,KAAAmM,EAAA3E,UAAA,WAAArC,SAAA,SAAAtD,EAAAC,GAAA,IAAA8E,EAAAlG,EAAA4G,MAAAtH,EAAAmM,GAAA,SAAAtF,EAAAtK,GAAAoK,GAAAC,EAAA/E,EAAAC,EAAA+E,EAAAC,EAAA,OAAAvK,EAAA,UAAAuK,EAAAlH,GAAA+G,GAAAC,EAAA/E,EAAAC,EAAA+E,EAAAC,EAAA,QAAAlH,EAAA,CAAAiH,OAAAvJ,EAAA,4PCAAe,GAAA,kBAAAC,CAAA,MAAAA,EAAA,GAAAC,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAI,gBAAA,SAAAC,EAAAC,EAAAC,GAAAF,EAAAC,GAAAC,EAAAxC,KAAA,EAAAyC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAX,EAAAC,EAAAvC,GAAA,OAAAiC,OAAAI,eAAAC,EAAAC,EAAA,CAAAvC,MAAAA,EAAAkD,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAd,EAAAC,EAAA,KAAAU,EAAA,aAAAI,GAAAJ,EAAA,SAAAX,EAAAC,EAAAvC,GAAA,OAAAsC,EAAAC,GAAAvC,CAAA,WAAAsD,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,GAAAA,EAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAA6B,OAAAH,EAAAzB,WAAA6B,EAAA,IAAAC,EAAAN,GAAA,WAAArB,EAAAwB,EAAA,WAAA7D,MAAAiE,EAAAV,EAAAE,EAAAM,KAAAF,CAAA,UAAAK,EAAAC,EAAA7B,EAAA8B,GAAA,WAAA3C,KAAA,SAAA2C,IAAAD,EAAAE,KAAA/B,EAAA8B,GAAA,OAAAf,GAAA,OAAA5B,KAAA,QAAA2C,IAAAf,EAAA,EAAAtB,EAAAuB,KAAAA,EAAA,IAAAgB,EAAA,YAAAV,IAAA,UAAAW,IAAA,UAAAC,IAAA,KAAAC,EAAA,GAAAxB,EAAAwB,EAAA9B,GAAA,8BAAA+B,EAAAzC,OAAA0C,eAAAC,EAAAF,GAAAA,EAAAA,EAAAG,EAAA,MAAAD,GAAAA,IAAA5C,GAAAG,EAAAkC,KAAAO,EAAAjC,KAAA8B,EAAAG,GAAA,IAAAE,EAAAN,EAAAtC,UAAA0B,EAAA1B,UAAAD,OAAA6B,OAAAW,GAAA,SAAAM,EAAA7C,GAAA,0BAAA8C,SAAA,SAAAC,GAAAhC,EAAAf,EAAA+C,GAAA,SAAAb,GAAA,YAAAc,QAAAD,EAAAb,EAAA,gBAAAe,EAAAtB,EAAAuB,GAAA,SAAAC,EAAAJ,EAAAb,EAAAkB,EAAAC,GAAA,IAAAC,EAAAtB,EAAAL,EAAAoB,GAAApB,EAAAO,GAAA,aAAAoB,EAAA/D,KAAA,KAAAgE,EAAAD,EAAApB,IAAApE,EAAAyF,EAAAzF,MAAA,OAAAA,GAAA,UAAA0F,GAAA1F,IAAAmC,EAAAkC,KAAArE,EAAA,WAAAoF,EAAAE,QAAAtF,EAAA2F,SAAAC,MAAA,SAAA5F,GAAAqF,EAAA,OAAArF,EAAAsF,EAAAC,EAAA,aAAAlC,GAAAgC,EAAA,QAAAhC,EAAAiC,EAAAC,EAAA,IAAAH,EAAAE,QAAAtF,GAAA4F,MAAA,SAAAC,GAAAJ,EAAAzF,MAAA6F,EAAAP,EAAAG,EAAA,aAAAK,GAAA,OAAAT,EAAA,QAAAS,EAAAR,EAAAC,EAAA,IAAAA,EAAAC,EAAApB,IAAA,KAAA2B,EAAA1D,EAAA,gBAAArC,MAAA,SAAAiF,EAAAb,GAAA,SAAA4B,IAAA,WAAAZ,GAAA,SAAAE,EAAAC,GAAAF,EAAAJ,EAAAb,EAAAkB,EAAAC,EAAA,WAAAQ,EAAAA,EAAAA,EAAAH,KAAAI,EAAAA,GAAAA,GAAA,aAAA/B,EAAAV,EAAAE,EAAAM,GAAA,IAAAkC,EAAA,iCAAAhB,EAAAb,GAAA,iBAAA6B,EAAA,UAAA7H,MAAA,iDAAA6H,EAAA,cAAAhB,EAAA,MAAAb,EAAA,OAAApE,WAAAe,EAAAmF,MAAA,OAAAnC,EAAAkB,OAAAA,EAAAlB,EAAAK,IAAAA,IAAA,KAAA+B,EAAApC,EAAAoC,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAApC,GAAA,GAAAqC,EAAA,IAAAA,IAAA9B,EAAA,gBAAA8B,CAAA,cAAArC,EAAAkB,OAAAlB,EAAAuC,KAAAvC,EAAAwC,MAAAxC,EAAAK,SAAA,aAAAL,EAAAkB,OAAA,uBAAAgB,EAAA,MAAAA,EAAA,YAAAlC,EAAAK,IAAAL,EAAAyC,kBAAAzC,EAAAK,IAAA,gBAAAL,EAAAkB,QAAAlB,EAAA0C,OAAA,SAAA1C,EAAAK,KAAA6B,EAAA,gBAAAT,EAAAtB,EAAAX,EAAAE,EAAAM,GAAA,cAAAyB,EAAA/D,KAAA,IAAAwE,EAAAlC,EAAAmC,KAAA,6BAAAV,EAAApB,MAAAE,EAAA,gBAAAtE,MAAAwF,EAAApB,IAAA8B,KAAAnC,EAAAmC,KAAA,WAAAV,EAAA/D,OAAAwE,EAAA,YAAAlC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAA,YAAAiC,EAAAF,EAAApC,GAAA,IAAA2C,EAAA3C,EAAAkB,OAAAA,EAAAkB,EAAAvD,SAAA8D,GAAA,QAAA3F,IAAAkE,EAAA,OAAAlB,EAAAoC,SAAA,eAAAO,GAAAP,EAAAvD,SAAA+D,SAAA5C,EAAAkB,OAAA,SAAAlB,EAAAK,SAAArD,EAAAsF,EAAAF,EAAApC,GAAA,UAAAA,EAAAkB,SAAA,WAAAyB,IAAA3C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAAF,EAAA,aAAApC,EAAA,IAAAkB,EAAAtB,EAAAe,EAAAkB,EAAAvD,SAAAmB,EAAAK,KAAA,aAAAoB,EAAA/D,KAAA,OAAAsC,EAAAkB,OAAA,QAAAlB,EAAAK,IAAAoB,EAAApB,IAAAL,EAAAoC,SAAA,KAAA7B,EAAA,IAAAuC,EAAArB,EAAApB,IAAA,OAAAyC,EAAAA,EAAAX,MAAAnC,EAAAoC,EAAAW,YAAAD,EAAA7G,MAAA+D,EAAAgD,KAAAZ,EAAAa,QAAA,WAAAjD,EAAAkB,SAAAlB,EAAAkB,OAAA,OAAAlB,EAAAK,SAAArD,GAAAgD,EAAAoC,SAAA,KAAA7B,GAAAuC,GAAA9C,EAAAkB,OAAA,QAAAlB,EAAAK,IAAA,IAAAwC,UAAA,oCAAA7C,EAAAoC,SAAA,KAAA7B,EAAA,UAAA2C,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,SAAAM,WAAAC,KAAAN,EAAA,UAAAO,EAAAP,GAAA,IAAA3B,EAAA2B,EAAAQ,YAAA,GAAAnC,EAAA/D,KAAA,gBAAA+D,EAAApB,IAAA+C,EAAAQ,WAAAnC,CAAA,UAAAxB,EAAAN,GAAA,KAAA8D,WAAA,EAAAJ,OAAA,SAAA1D,EAAAsB,QAAAiC,EAAA,WAAAW,OAAA,YAAA/C,EAAAgD,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAAlF,GAAA,GAAAmF,EAAA,OAAAA,EAAAzD,KAAAwD,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAjH,QAAA,KAAAoH,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAjH,QAAA,GAAAuB,EAAAkC,KAAAwD,EAAAG,GAAA,OAAAjB,EAAA/G,MAAA6H,EAAAG,GAAAjB,EAAAb,MAAA,EAAAa,EAAA,OAAAA,EAAA/G,WAAAe,EAAAgG,EAAAb,MAAA,EAAAa,CAAA,SAAAA,EAAAA,KAAAA,CAAA,SAAAA,KAAAkB,EAAA,UAAAA,IAAA,OAAAjI,WAAAe,EAAAmF,MAAA,UAAA3B,EAAArC,UAAAsC,EAAAnC,EAAAyC,EAAA,eAAA9E,MAAAwE,EAAArB,cAAA,IAAAd,EAAAmC,EAAA,eAAAxE,MAAAuE,EAAApB,cAAA,IAAAoB,EAAA2D,YAAAjF,EAAAuB,EAAAzB,EAAA,qBAAAhB,EAAAoG,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,GAAAA,EAAA1I,YAAA,QAAA2I,IAAAA,IAAA9D,GAAA,uBAAA8D,EAAAH,aAAAG,EAAAC,MAAA,EAAAvG,EAAAwG,KAAA,SAAAH,GAAA,OAAAnG,OAAAuG,eAAAvG,OAAAuG,eAAAJ,EAAA5D,IAAA4D,EAAAK,UAAAjE,EAAAvB,EAAAmF,EAAArF,EAAA,sBAAAqF,EAAAlG,UAAAD,OAAA6B,OAAAgB,GAAAsD,CAAA,EAAArG,EAAA2G,MAAA,SAAAtE,GAAA,OAAAuB,QAAAvB,EAAA,EAAAW,EAAAI,EAAAjD,WAAAe,EAAAkC,EAAAjD,UAAAW,GAAA,0BAAAd,EAAAoD,cAAAA,EAAApD,EAAA4G,MAAA,SAAApF,EAAAC,EAAAC,EAAAC,EAAA0B,QAAA,IAAAA,IAAAA,EAAAwD,SAAA,IAAAC,EAAA,IAAA1D,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAC,GAAA0B,GAAA,OAAArD,EAAAoG,oBAAA3E,GAAAqF,EAAAA,EAAA9B,OAAAnB,MAAA,SAAAH,GAAA,OAAAA,EAAAS,KAAAT,EAAAzF,MAAA6I,EAAA9B,MAAA,KAAAhC,EAAAD,GAAA7B,EAAA6B,EAAA/B,EAAA,aAAAE,EAAA6B,EAAAnC,GAAA,0BAAAM,EAAA6B,EAAA,qDAAA/C,EAAA+G,KAAA,SAAAC,GAAA,IAAAC,EAAA/G,OAAA8G,GAAAD,EAAA,WAAAvG,KAAAyG,EAAAF,EAAArB,KAAAlF,GAAA,OAAAuG,EAAAG,UAAA,SAAAlC,IAAA,KAAA+B,EAAAlI,QAAA,KAAA2B,EAAAuG,EAAA5H,MAAA,GAAAqB,KAAAyG,EAAA,OAAAjC,EAAA/G,MAAAuC,EAAAwE,EAAAb,MAAA,EAAAa,CAAA,QAAAA,EAAAb,MAAA,EAAAa,CAAA,GAAAhF,EAAA8C,OAAAA,EAAAb,EAAA9B,UAAA,CAAAxC,YAAAsE,EAAA4D,MAAA,SAAAsB,GAAA,QAAAC,KAAA,OAAApC,KAAA,OAAAT,KAAA,KAAAC,WAAAxF,EAAA,KAAAmF,MAAA,OAAAC,SAAA,UAAAlB,OAAA,YAAAb,SAAArD,EAAA,KAAAyG,WAAAxC,QAAA0C,IAAAwB,EAAA,QAAAZ,KAAA,WAAAA,EAAAc,OAAA,IAAAjH,EAAAkC,KAAA,KAAAiE,KAAAP,OAAAO,EAAA3H,MAAA,WAAA2H,QAAAvH,EAAA,EAAAsI,KAAA,gBAAAnD,MAAA,MAAAoD,EAAA,KAAA9B,WAAA,GAAAG,WAAA,aAAA2B,EAAA7H,KAAA,MAAA6H,EAAAlF,IAAA,YAAAmF,IAAA,EAAA/C,kBAAA,SAAAgD,GAAA,QAAAtD,KAAA,MAAAsD,EAAA,IAAAzF,EAAA,cAAA0F,EAAAC,EAAAC,GAAA,OAAAnE,EAAA/D,KAAA,QAAA+D,EAAApB,IAAAoF,EAAAzF,EAAAgD,KAAA2C,EAAAC,IAAA5F,EAAAkB,OAAA,OAAAlB,EAAAK,SAAArD,KAAA4I,CAAA,SAAA3B,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAAxC,EAAA2B,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAqC,EAAA,UAAAtC,EAAAC,QAAA,KAAA+B,KAAA,KAAAS,EAAAzH,EAAAkC,KAAA8C,EAAA,YAAA0C,EAAA1H,EAAAkC,KAAA8C,EAAA,iBAAAyC,GAAAC,EAAA,SAAAV,KAAAhC,EAAAE,SAAA,OAAAoC,EAAAtC,EAAAE,UAAA,WAAA8B,KAAAhC,EAAAG,WAAA,OAAAmC,EAAAtC,EAAAG,WAAA,SAAAsC,GAAA,QAAAT,KAAAhC,EAAAE,SAAA,OAAAoC,EAAAtC,EAAAE,UAAA,YAAAwC,EAAA,UAAAzL,MAAA,kDAAA+K,KAAAhC,EAAAG,WAAA,OAAAmC,EAAAtC,EAAAG,WAAA,KAAAb,OAAA,SAAAhF,EAAA2C,GAAA,QAAA4D,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,QAAA,KAAA+B,MAAAhH,EAAAkC,KAAA8C,EAAA,oBAAAgC,KAAAhC,EAAAG,WAAA,KAAAwC,EAAA3C,EAAA,OAAA2C,IAAA,UAAArI,GAAA,aAAAA,IAAAqI,EAAA1C,QAAAhD,GAAAA,GAAA0F,EAAAxC,aAAAwC,EAAA,UAAAtE,EAAAsE,EAAAA,EAAAnC,WAAA,UAAAnC,EAAA/D,KAAAA,EAAA+D,EAAApB,IAAAA,EAAA0F,GAAA,KAAA7E,OAAA,YAAA8B,KAAA+C,EAAAxC,WAAAhD,GAAA,KAAAyF,SAAAvE,EAAA,EAAAuE,SAAA,SAAAvE,EAAA+B,GAAA,aAAA/B,EAAA/D,KAAA,MAAA+D,EAAApB,IAAA,gBAAAoB,EAAA/D,MAAA,aAAA+D,EAAA/D,KAAA,KAAAsF,KAAAvB,EAAApB,IAAA,WAAAoB,EAAA/D,MAAA,KAAA8H,KAAA,KAAAnF,IAAAoB,EAAApB,IAAA,KAAAa,OAAA,cAAA8B,KAAA,kBAAAvB,EAAA/D,MAAA8F,IAAA,KAAAR,KAAAQ,GAAAjD,CAAA,EAAA0F,OAAA,SAAA1C,GAAA,QAAAU,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAG,aAAAA,EAAA,YAAAyC,SAAA5C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAA7C,CAAA,GAAA2F,MAAA,SAAA7C,GAAA,QAAAY,EAAA,KAAAR,WAAA5G,OAAA,EAAAoH,GAAA,IAAAA,EAAA,KAAAb,EAAA,KAAAK,WAAAQ,GAAA,GAAAb,EAAAC,SAAAA,EAAA,KAAA5B,EAAA2B,EAAAQ,WAAA,aAAAnC,EAAA/D,KAAA,KAAAyI,EAAA1E,EAAApB,IAAAsD,EAAAP,EAAA,QAAA+C,CAAA,YAAA9L,MAAA,0BAAA+L,cAAA,SAAAtC,EAAAf,EAAAE,GAAA,YAAAb,SAAA,CAAAvD,SAAAiC,EAAAgD,GAAAf,WAAAA,EAAAE,QAAAA,GAAA,cAAA/B,SAAA,KAAAb,SAAArD,GAAAuD,CAAA,GAAAvC,CAAA,UAAAqI,GAAAC,EAAA/E,EAAAC,EAAA+E,EAAAC,EAAAhI,EAAA6B,GAAA,QAAAyC,EAAAwD,EAAA9H,GAAA6B,GAAApE,EAAA6G,EAAA7G,KAAA,OAAA8F,GAAA,YAAAP,EAAAO,EAAA,CAAAe,EAAAX,KAAAZ,EAAAtF,GAAA4I,QAAAtD,QAAAtF,GAAA4F,KAAA0E,EAAAC,EAAA,UAAA8G,GAAAlN,GAAA,sBAAAV,EAAA,KAAAmM,EAAA3E,UAAA,WAAArC,SAAA,SAAAtD,EAAAC,GAAA,IAAA8E,EAAAlG,EAAA4G,MAAAtH,EAAAmM,GAAA,SAAAtF,EAAAtK,GAAAoK,GAAAC,EAAA/E,EAAAC,EAAA+E,EAAAC,EAAA,OAAAvK,EAAA,UAAAuK,EAAAlH,GAAA+G,GAAAC,EAAA/E,EAAAC,EAAA+E,EAAAC,EAAA,QAAAlH,EAAA,CAAAiH,OAAAvJ,EAAA,KF4CAiQ,EAAmBZ,ICGnBY,EAzCsB,IAAIb,EAAW,CACjChS,GAAI,eACJ+J,YAAa,SAACoJ,GAAK,OAAKC,EAAAA,EAAAA,IAAE,gBAAiB,eAAgB,gBAAiBD,EAAM1Q,OAAO,EACzF4P,cAAe,8NAAc,EAC7BC,QAAS,SAACa,EAAOE,GACb,OAAIA,EAAKrT,KAAO+R,GAGK,IAAjBoB,EAAM1Q,SAKN0Q,EAAMoB,MAAK,SAAAlD,GAAI,OAAIA,EAAKvQ,WAAW0T,WAChCnD,EAAKvQ,WAAWyQ,aAAelC,OAAOC,GAAGmF,MAAMC,uBAAuB,GAIjF,EACMnC,KAAI,SAAClB,GAAM,OAAA6B,GAAAvP,KAAAyG,MAAA,SAAAiG,IAAA,IAAAiD,EAAA5Q,EAAA,OAAAiB,KAAAwB,MAAA,SAAA4L,GAAA,cAAAA,EAAA/F,KAAA+F,EAAAnI,MAAA,OAMP,OANOmI,EAAA/F,KAAA,EAEHsI,IAAajC,EAAKvQ,WAAWyS,OAC7B7Q,GAAMiN,EAAAA,EAAAA,gBAAe,6CAA8C,CACrE6D,UAAWF,EAAW,gBAAkB,SACxCtT,GAAIqR,EAAKvQ,WAAWd,KACtB+Q,EAAAnI,KAAA,EACIgH,EAAAA,EAAM+E,OAAOjS,GAAI,OAEU,OAAjCgR,EAAAA,EAAAA,IAAK,qBAAsBrC,GAAMN,EAAAzI,OAAA,UAC1B,GAAI,cAAAyI,EAAA/F,KAAA,EAAA+F,EAAA4C,GAAA5C,EAAA,SAAAA,EAAAzI,OAAA,UAGJ,GAAK,yBAAAyI,EAAA7F,OAAA,GAAAmF,EAAA,iBAbH6C,EAejB,EACMV,UAAS,SAACW,EAAOE,EAAMO,GAAK,IAAAC,EAAA,YAAAX,GAAAvP,KAAAyG,MAAA,SAAA0J,IAAA,OAAAnQ,KAAAwB,MAAA,SAAA4O,GAAA,cAAAA,EAAA/I,KAAA+I,EAAAnL,MAAA,cAAAmL,EAAAzL,OAAA,SACvBmC,QAAQuG,IAAImC,EAAMlC,KAAI,SAAAI,GAAI,OAAIwC,EAAKtB,KAAKlB,EAAMgC,EAAMO,EAAI,MAAE,wBAAAG,EAAA7I,OAAA,GAAA4I,EAAA,IADnCZ,EAElC,EACAT,MAAO,EACPE,OAAQ,kBAAM,CAAI,KCdtBE,EAzBsB,IAAIb,EAAW,CACjChS,GAAI,gBACJ+J,YAAa,SAACoJ,GAAK,OAAKC,EAAAA,EAAAA,IAAE,gBAAiB,gBAAiB,iBAAkBD,EAAM1Q,OAAO,EAC3F4P,cAAe,8RAAsB,EACrCC,QAAS,SAACa,EAAOE,GAAI,OAAKF,EAAM1Q,OAAS,GAAK4Q,EAAKrT,KAAO8R,CAAmB,EACvES,KAAI,SAAClB,GAAM,OAAA6B,GAAAvP,KAAAyG,MAAA,SAAAiG,IAAA,IAAA3N,EAAA,OAAAiB,KAAAwB,MAAA,SAAA4L,GAAA,cAAAA,EAAA/F,KAAA+F,EAAAnI,MAAA,OAIP,OAJOmI,EAAA/F,KAAA,EAEHtI,GAAMiN,EAAAA,EAAAA,gBAAe,+CAAgD,CACvE3P,GAAIqR,EAAKvQ,WAAWd,KACtB+Q,EAAAnI,KAAA,EACIgH,EAAAA,EAAM6D,KAAK/Q,GAAI,OAEY,OAAjCgR,EAAAA,EAAAA,IAAK,qBAAsBrC,GAAMN,EAAAzI,OAAA,UAC1B,GAAI,cAAAyI,EAAA/F,KAAA,EAAA+F,EAAA4C,GAAA5C,EAAA,SAAAA,EAAAzI,OAAA,UAGJ,GAAK,yBAAAyI,EAAA7F,OAAA,GAAAmF,EAAA,iBAXH6C,EAajB,EACMV,UAAS,SAACW,EAAOE,EAAMO,GAAK,IAAAC,EAAA,YAAAX,GAAAvP,KAAAyG,MAAA,SAAA0J,IAAA,OAAAnQ,KAAAwB,MAAA,SAAA4O,GAAA,cAAAA,EAAA/I,KAAA+I,EAAAnL,MAAA,cAAAmL,EAAAzL,OAAA,SACvBmC,QAAQuG,IAAImC,EAAMlC,KAAI,SAAAI,GAAI,OAAIwC,EAAKtB,KAAKlB,EAAMgC,EAAMO,EAAI,MAAE,wBAAAG,EAAA7I,OAAA,GAAA4I,EAAA,IADnCZ,EAElC,EACAT,MAAO,EACPE,OAAQ,kBAAM,CAAI,MLfZqB,GAAa3E,OAAO6E,IAAIC,MAAMH,YACzBY,SAAS,CAChB5U,GAAI0R,EACJvH,MAAM8J,EAAAA,EAAAA,IAAE,gBAAiB,UACzBY,SAASZ,EAAAA,EAAAA,IAAE,gBAAiB,6BAC5Ba,YAAYb,EAAAA,EAAAA,IAAE,gBAAiB,aAC/Bc,cAAcd,EAAAA,EAAAA,IAAE,gBAAiB,+EACjCe,wiBACAvC,MAAO,GACPwC,QAAS,GACT9E,YAAa,kBAAMA,GAAa,IAEpC6D,GAAWY,SAAS,CAChB5U,GAAI2R,EACJxH,MAAM8J,EAAAA,EAAAA,IAAE,gBAAiB,mBACzBY,SAASZ,EAAAA,EAAAA,IAAE,gBAAiB,2CAC5Ba,YAAYb,EAAAA,EAAAA,IAAE,gBAAiB,+BAC/Bc,cAAcd,EAAAA,EAAAA,IAAE,gBAAiB,8DACjCe,sOACAvC,MAAO,EACPyC,OAAQxD,EACRuD,QAAS,GACT9E,YAAa,kBAAMA,GAAY,GAAM,GAAO,GAAO,EAAM,IAE7D6D,GAAWY,SAAS,CAChB5U,GAAI4R,EACJzH,MAAM8J,EAAAA,EAAAA,IAAE,gBAAiB,sBACzBY,SAASZ,EAAAA,EAAAA,IAAE,gBAAiB,8CAC5Ba,YAAYb,EAAAA,EAAAA,IAAE,gBAAiB,sBAC/Bc,cAAcd,EAAAA,EAAAA,IAAE,gBAAiB,kDACjCe,8qBACAvC,MAAO,EACPyC,OAAQxD,EACRuD,QAAS,GACT9E,YAAa,kBAAMA,GAAY,GAAO,GAAM,GAAO,EAAM,IAE7D6D,GAAWY,SAAS,CAChB5U,GAAI6R,EACJ1H,MAAM8J,EAAAA,EAAAA,IAAE,gBAAiB,kBACzBY,SAASZ,EAAAA,EAAAA,IAAE,gBAAiB,0CAC5Ba,YAAYb,EAAAA,EAAAA,IAAE,gBAAiB,mBAC/Bc,cAAcd,EAAAA,EAAAA,IAAE,gBAAiB,0DACjCe,kVACAvC,MAAO,EACPyC,OAAQxD,EACRuD,QAAS,GACT9E,YAAa,kBAAMA,GAAY,GAAO,GAAM,GAAO,EAAO,CAACd,OAAOC,GAAGmF,MAAMU,iBAAiB,IAEhGnB,GAAWY,SAAS,CAChB5U,GAAI8R,EACJ3H,MAAM8J,EAAAA,EAAAA,IAAE,gBAAiB,kBACzBY,SAASZ,EAAAA,EAAAA,IAAE,gBAAiB,4BAC5Ba,YAAYb,EAAAA,EAAAA,IAAE,gBAAiB,qBAC/Bc,cAAcd,EAAAA,EAAAA,IAAE,gBAAiB,0CACjCe,wLACAvC,MAAO,EACPyC,OAAQxD,EACRuD,QAAS,GACT9E,YAAa,kBAAMA,GAAY,GAAO,GAAO,GAAO,EAAK,IAE7D6D,GAAWY,SAAS,CAChB5U,GAAI+R,EACJ5H,MAAM8J,EAAAA,EAAAA,IAAE,gBAAiB,kBACzBY,SAASZ,EAAAA,EAAAA,IAAE,gBAAiB,8BAC5Ba,YAAYb,EAAAA,EAAAA,IAAE,gBAAiB,qBAC/Bc,cAAcd,EAAAA,EAAAA,IAAE,gBAAiB,+DACjCe,+sBACAvC,MAAO,EACPyC,OAAQxD,EACRuD,QAAS,GACT9E,YAAa,kBAAMA,GAAY,GAAO,GAAO,GAAM,EAAM,MMpF7DiF,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB1S,IAAjB2S,EACH,OAAOA,EAAa3R,QAGrB,IAAI4R,EAASJ,EAAyBE,GAAY,CACjDtV,GAAIsV,EACJG,QAAQ,EACR7R,QAAS,CAAC,GAUX,OANA8R,EAAoBJ,GAAUpP,KAAKsP,EAAO5R,QAAS4R,EAAQA,EAAO5R,QAASyR,GAG3EG,EAAOC,QAAS,EAGTD,EAAO5R,OACf,CAGAyR,EAAoBM,EAAID,EX5BpBxW,EAAW,GACfmW,EAAoBO,EAAI,SAAStO,EAAQuO,EAAU7P,EAAI8P,GACtD,IAAGD,EAAH,CAMA,IAAIE,EAAeC,IACnB,IAASnM,EAAI,EAAGA,EAAI3K,EAASuD,OAAQoH,IAAK,CACrCgM,EAAW3W,EAAS2K,GAAG,GACvB7D,EAAK9G,EAAS2K,GAAG,GACjBiM,EAAW5W,EAAS2K,GAAG,GAE3B,IAJA,IAGIoM,GAAY,EACPC,EAAI,EAAGA,EAAIL,EAASpT,OAAQyT,MACpB,EAAXJ,GAAsBC,GAAgBD,IAAahS,OAAO6G,KAAK0K,EAAoBO,GAAGO,OAAM,SAAS/R,GAAO,OAAOiR,EAAoBO,EAAExR,GAAKyR,EAASK,GAAK,IAChKL,EAASO,OAAOF,IAAK,IAErBD,GAAY,EACTH,EAAWC,IAAcA,EAAeD,IAG7C,GAAGG,EAAW,CACb/W,EAASkX,OAAOvM,IAAK,GACrB,IAAIwM,EAAIrQ,SACEpD,IAANyT,IAAiB/O,EAAS+O,EAC/B,CACD,CACA,OAAO/O,CArBP,CAJCwO,EAAWA,GAAY,EACvB,IAAI,IAAIjM,EAAI3K,EAASuD,OAAQoH,EAAI,GAAK3K,EAAS2K,EAAI,GAAG,GAAKiM,EAAUjM,IAAK3K,EAAS2K,GAAK3K,EAAS2K,EAAI,GACrG3K,EAAS2K,GAAK,CAACgM,EAAU7P,EAAI8P,EAwB/B,EY5BAT,EAAoBjC,EAAI,SAASoC,GAChC,IAAIc,EAASd,GAAUA,EAAOe,WAC7B,WAAa,OAAOf,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAH,EAAoBmB,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CACR,ECNAjB,EAAoBmB,EAAI,SAAS5S,EAAS8S,GACzC,IAAI,IAAItS,KAAOsS,EACXrB,EAAoBsB,EAAED,EAAYtS,KAASiR,EAAoBsB,EAAE/S,EAASQ,IAC5EN,OAAOI,eAAeN,EAASQ,EAAK,CAAEW,YAAY,EAAM8K,IAAK6G,EAAWtS,IAG3E,ECPAiR,EAAoBuB,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOrV,MAAQ,IAAIsV,SAAS,cAAb,EAChB,CAAE,MAAO3W,GACR,GAAsB,iBAAXkP,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBgG,EAAoBsB,EAAI,SAASxS,EAAKvC,GAAQ,OAAOkC,OAAOC,UAAUE,eAAeiC,KAAK/B,EAAKvC,EAAO,ECCtGyT,EAAoBgB,EAAI,SAASzS,GACX,oBAAXW,QAA0BA,OAAOM,aAC1Cf,OAAOI,eAAeN,EAASW,OAAOM,YAAa,CAAEhD,MAAO,WAE7DiC,OAAOI,eAAeN,EAAS,aAAc,CAAE/B,OAAO,GACvD,ECNAwT,EAAoB0B,IAAM,SAASvB,GAGlC,OAFAA,EAAOwB,MAAQ,GACVxB,EAAOyB,WAAUzB,EAAOyB,SAAW,IACjCzB,CACR,ECJAH,EAAoBa,EAAI,gBCAxBb,EAAoB6B,EAAIC,SAASC,SAAW9R,KAAK+R,SAASC,KAK1D,IAAIC,EAAkB,CACrB,KAAM,GAaPlC,EAAoBO,EAAEM,EAAI,SAASsB,GAAW,OAAoC,IAA7BD,EAAgBC,EAAgB,EAGrF,IAAIC,EAAuB,SAASC,EAA4B3X,GAC/D,IAKIuV,EAAUkC,EALV3B,EAAW9V,EAAK,GAChB4X,EAAc5X,EAAK,GACnB6X,EAAU7X,EAAK,GAGI8J,EAAI,EAC3B,GAAGgM,EAAStB,MAAK,SAASvU,GAAM,OAA+B,IAAxBuX,EAAgBvX,EAAW,IAAI,CACrE,IAAIsV,KAAYqC,EACZtC,EAAoBsB,EAAEgB,EAAarC,KACrCD,EAAoBM,EAAEL,GAAYqC,EAAYrC,IAGhD,GAAGsC,EAAS,IAAItQ,EAASsQ,EAAQvC,EAClC,CAEA,IADGqC,GAA4BA,EAA2B3X,GACrD8J,EAAIgM,EAASpT,OAAQoH,IACzB2N,EAAU3B,EAAShM,GAChBwL,EAAoBsB,EAAEY,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOnC,EAAoBO,EAAEtO,EAC9B,EAEIuQ,EAAqBvS,KAA4B,sBAAIA,KAA4B,uBAAK,GAC1FuS,EAAmBhR,QAAQ4Q,EAAqBK,KAAK,KAAM,IAC3DD,EAAmBvO,KAAOmO,EAAqBK,KAAK,KAAMD,EAAmBvO,KAAKwO,KAAKD,OClDvFxC,EAAoB0C,QAAKnV,ECGzB,IAAIoV,EAAsB3C,EAAoBO,OAAEhT,EAAW,CAAC,OAAO,WAAa,OAAOyS,EAAoB,MAAQ,IACnH2C,EAAsB3C,EAAoBO,EAAEoC","sources":["webpack:///nextcloud/webpack/runtime/chunk loaded","webpack:///nextcloud/node_modules/@nextcloud/files/dist/index.esm.js","webpack:///nextcloud/apps/files_sharing/src/services/logger.ts","webpack:///nextcloud/apps/files_sharing/src/services/SharingService.ts","webpack:///nextcloud/apps/files/src/services/FileAction.ts","webpack:///nextcloud/apps/files_sharing/src/views/shares.ts","webpack:///nextcloud/apps/files/src/logger.js","webpack:///nextcloud/apps/files_sharing/src/actions/acceptShareAction.ts","webpack:///nextcloud/apps/files_sharing/src/actions/openInFilesAction.ts","webpack:///nextcloud/apps/files_sharing/src/actions/rejectShareAction.ts","webpack:///nextcloud/apps/files_sharing/src/actions/restoreShareAction.ts","webpack:///nextcloud/webpack/bootstrap","webpack:///nextcloud/webpack/runtime/compat get default export","webpack:///nextcloud/webpack/runtime/define property getters","webpack:///nextcloud/webpack/runtime/global","webpack:///nextcloud/webpack/runtime/hasOwnProperty shorthand","webpack:///nextcloud/webpack/runtime/make namespace object","webpack:///nextcloud/webpack/runtime/node module decorator","webpack:///nextcloud/webpack/runtime/runtimeId","webpack:///nextcloud/webpack/runtime/jsonp chunk loading","webpack:///nextcloud/webpack/runtime/nonce","webpack:///nextcloud/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { getCanonicalLocale } from '@nextcloud/l10n';\nimport { getCurrentUser } from '@nextcloud/auth';\nimport { getLoggerBuilder } from '@nextcloud/logger';\nimport { join, basename, extname, dirname } from 'path';\n\n/**\n * @copyright 2019 Christoph Wurst <christoph@winzerhof-wurst.at>\n *\n * @author Christoph Wurst <christoph@winzerhof-wurst.at>\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nconst humanList = ['B', 'KB', 'MB', 'GB', 'TB', 'PB'];\nconst humanListBinary = ['B', 'KiB', 'MiB', 'GiB', 'TiB', 'PiB'];\n/**\n * Format a file size in a human-like format. e.g. 42GB\n *\n * @param size in bytes\n * @param skipSmallSizes avoid rendering tiny sizes and return '< 1 KB' instead\n */\nfunction formatFileSize(size, skipSmallSizes = false, binaryPrefixes = false) {\n    if (typeof size === 'string') {\n        size = Number(size);\n    }\n    /*\n    * @note This block previously used Log base 1024, per IEC 80000-13;\n    * however, the wrong prefix was used. Now we use decimal calculation\n    * with base 1000 per the SI. Base 1024 calculation with binary\n    * prefixes is optional, but has yet to be added to the UI.\n    */\n    // Calculate Log with base 1024 or 1000: size = base ** order\n    let order = size > 0 ? Math.floor(Math.log(size) / Math.log(binaryPrefixes ? 1024 : 1000)) : 0;\n    // Stay in range of the byte sizes that are defined\n    order = Math.min((binaryPrefixes ? humanListBinary.length : humanList.length) - 1, order);\n    const readableFormat = binaryPrefixes ? humanListBinary[order] : humanList[order];\n    let relativeSize = (size / Math.pow(binaryPrefixes ? 1024 : 1000, order)).toFixed(1);\n    if (skipSmallSizes === true && order === 0) {\n        return (relativeSize !== '0.0' ? '< 1 ' : '0 ') + (binaryPrefixes ? humanListBinary[1] : humanList[1]);\n    }\n    if (order < 2) {\n        relativeSize = parseFloat(relativeSize).toFixed(0);\n    }\n    else {\n        relativeSize = parseFloat(relativeSize).toLocaleString(getCanonicalLocale());\n    }\n    return relativeSize + ' ' + readableFormat;\n}\n\n/**\n * @copyright 2019 Christoph Wurst <christoph@winzerhof-wurst.at>\n *\n * @author Christoph Wurst <christoph@winzerhof-wurst.at>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nconst getLogger = user => {\n    if (user === null) {\n        return getLoggerBuilder()\n            .setApp('files')\n            .build();\n    }\n    return getLoggerBuilder()\n        .setApp('files')\n        .setUid(user.uid)\n        .build();\n};\nvar logger = getLogger(getCurrentUser());\n\n/**\n * @copyright Copyright (c) 2021 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nclass NewFileMenu {\n    _entries = [];\n    registerEntry(entry) {\n        this.validateEntry(entry);\n        this._entries.push(entry);\n    }\n    unregisterEntry(entry) {\n        const entryIndex = typeof entry === 'string'\n            ? this.getEntryIndex(entry)\n            : this.getEntryIndex(entry.id);\n        if (entryIndex === -1) {\n            logger.warn('Entry not found, nothing removed', { entry, entries: this.getEntries() });\n            return;\n        }\n        this._entries.splice(entryIndex, 1);\n    }\n    /**\n     * Get the list of registered entries\n     *\n     * @param {FileInfo} context the creation context. Usually the current folder FileInfo\n     */\n    getEntries(context) {\n        if (context) {\n            return this._entries\n                .filter(entry => typeof entry.if === 'function' ? entry.if(context) : true);\n        }\n        return this._entries;\n    }\n    getEntryIndex(id) {\n        return this._entries.findIndex(entry => entry.id === id);\n    }\n    validateEntry(entry) {\n        if (!entry.id || !entry.displayName || !(entry.iconSvgInline || entry.iconClass)) {\n            throw new Error('Invalid entry');\n        }\n        if (typeof entry.id !== 'string'\n            || typeof entry.displayName !== 'string') {\n            throw new Error('Invalid id or displayName property');\n        }\n        if ((entry.iconClass && typeof entry.iconClass !== 'string')\n            || (entry.iconSvgInline && typeof entry.iconSvgInline !== 'string')) {\n            throw new Error('Invalid icon provided');\n        }\n        if (entry.if !== undefined && typeof entry.if !== 'function') {\n            throw new Error('Invalid if property');\n        }\n        if (entry.templateName && typeof entry.templateName !== 'string') {\n            throw new Error('Invalid templateName property');\n        }\n        if (entry.handler && typeof entry.handler !== 'function') {\n            throw new Error('Invalid handler property');\n        }\n        if (!entry.templateName && !entry.handler) {\n            throw new Error('At least a templateName or a handler must be provided');\n        }\n        if (this.getEntryIndex(entry.id) !== -1) {\n            throw new Error('Duplicate entry');\n        }\n    }\n}\nconst getNewFileMenu = function () {\n    if (typeof window._nc_newfilemenu === 'undefined') {\n        window._nc_newfilemenu = new NewFileMenu();\n        logger.debug('NewFileMenu initialized');\n    }\n    return window._nc_newfilemenu;\n};\n\n/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar FileType;\n(function (FileType) {\n    FileType[\"Folder\"] = \"folder\";\n    FileType[\"File\"] = \"file\";\n})(FileType || (FileType = {}));\n\n/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nvar Permission;\n(function (Permission) {\n    Permission[Permission[\"NONE\"] = 0] = \"NONE\";\n    Permission[Permission[\"CREATE\"] = 4] = \"CREATE\";\n    Permission[Permission[\"READ\"] = 1] = \"READ\";\n    Permission[Permission[\"UPDATE\"] = 2] = \"UPDATE\";\n    Permission[Permission[\"DELETE\"] = 8] = \"DELETE\";\n    Permission[Permission[\"SHARE\"] = 16] = \"SHARE\";\n    Permission[Permission[\"ALL\"] = 31] = \"ALL\";\n})(Permission || (Permission = {}));\n/**\n * Parse the webdav permission string to a permission enum\n * @see https://github.com/nextcloud/server/blob/71f698649f578db19a22457cb9d420fb62c10382/lib/public/Files/DavUtil.php#L58-L88\n */\nconst parseWebdavPermissions = function (permString = '') {\n    let permissions = Permission.NONE;\n    if (!permString)\n        return permissions;\n    if (permString.includes('C') || permString.includes('K'))\n        permissions |= Permission.CREATE;\n    if (permString.includes('G'))\n        permissions |= Permission.READ;\n    if (permString.includes('W') || permString.includes('N') || permString.includes('V'))\n        permissions |= Permission.UPDATE;\n    if (permString.includes('D'))\n        permissions |= Permission.DELETE;\n    if (permString.includes('R'))\n        permissions |= Permission.SHARE;\n    return permissions;\n};\n\n/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nconst isDavRessource = function (source, davService) {\n    return source.match(davService) !== null;\n};\n/**\n * Validate Node construct data\n */\nconst validateData = (data, davService) => {\n    if ('id' in data && (typeof data.id !== 'number' || data.id < 0)) {\n        throw new Error('Invalid id type of value');\n    }\n    if (!data.source) {\n        throw new Error('Missing mandatory source');\n    }\n    try {\n        new URL(data.source);\n    }\n    catch (e) {\n        throw new Error('Invalid source format, source must be a valid URL');\n    }\n    if (!data.source.startsWith('http')) {\n        throw new Error('Invalid source format, only http(s) is supported');\n    }\n    if ('mtime' in data && !(data.mtime instanceof Date)) {\n        throw new Error('Invalid mtime type');\n    }\n    if ('crtime' in data && !(data.crtime instanceof Date)) {\n        throw new Error('Invalid crtime type');\n    }\n    if (!data.mime || typeof data.mime !== 'string'\n        || !data.mime.match(/^[-\\w.]+\\/[-+\\w.]+$/gi)) {\n        throw new Error('Missing or invalid mandatory mime');\n    }\n    if ('size' in data && typeof data.size !== 'number') {\n        throw new Error('Invalid size type');\n    }\n    if ('permissions' in data && !(typeof data.permissions === 'number'\n        && data.permissions >= Permission.NONE\n        && data.permissions <= Permission.ALL)) {\n        throw new Error('Invalid permissions');\n    }\n    if ('owner' in data\n        && data.owner !== null\n        && typeof data.owner !== 'string') {\n        throw new Error('Invalid owner type');\n    }\n    if ('attributes' in data && typeof data.attributes !== 'object') {\n        throw new Error('Invalid attributes format');\n    }\n    if ('root' in data && typeof data.root !== 'string') {\n        throw new Error('Invalid root format');\n    }\n    if (data.root && !data.root.startsWith('/')) {\n        throw new Error('Root must start with a leading slash');\n    }\n    if (data.root && !data.source.includes(data.root)) {\n        throw new Error('Root must be part of the source');\n    }\n    if (data.root && isDavRessource(data.source, davService)) {\n        const service = data.source.match(davService)[0];\n        if (!data.source.includes(join(service, data.root))) {\n            throw new Error('The root must be relative to the service. e.g /files/emma');\n        }\n    }\n};\n\n/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nclass Node {\n    _data;\n    _attributes;\n    _knownDavService = /(remote|public)\\.php\\/(web)?dav/i;\n    constructor(data, davService) {\n        // Validate data\n        validateData(data, davService || this._knownDavService);\n        this._data = data;\n        const handler = {\n            set: (target, prop, value) => {\n                // Edit modification time\n                this._data['mtime'] = new Date();\n                // Apply original changes\n                return Reflect.set(target, prop, value);\n            },\n            deleteProperty: (target, prop) => {\n                // Edit modification time\n                this._data['mtime'] = new Date();\n                // Apply original changes\n                return Reflect.deleteProperty(target, prop);\n            },\n        };\n        // Proxy the attributes to update the mtime on change\n        this._attributes = new Proxy(data.attributes || {}, handler);\n        delete this._data.attributes;\n        if (davService) {\n            this._knownDavService = davService;\n        }\n    }\n    /**\n     * Get the source url to this object\n     */\n    get source() {\n        // strip any ending slash\n        return this._data.source.replace(/\\/$/i, '');\n    }\n    /**\n     * Get this object name\n     */\n    get basename() {\n        return basename(this.source);\n    }\n    /**\n     * Get this object's extension\n     */\n    get extension() {\n        return extname(this.source);\n    }\n    /**\n     * Get the directory path leading to this object\n     * Will use the relative path to root if available\n     */\n    get dirname() {\n        if (this.root) {\n            // Using replace would remove all part matching root\n            const firstMatch = this.source.indexOf(this.root);\n            return dirname(this.source.slice(firstMatch + this.root.length) || '/');\n        }\n        // This should always be a valid URL\n        // as this is tested in the constructor\n        const url = new URL(this.source);\n        return dirname(url.pathname);\n    }\n    /**\n     * Get the file mime\n     */\n    get mime() {\n        return this._data.mime;\n    }\n    /**\n     * Get the file modification time\n     */\n    get mtime() {\n        return this._data.mtime;\n    }\n    /**\n     * Get the file creation time\n     */\n    get crtime() {\n        return this._data.crtime;\n    }\n    /**\n     * Get the file size\n     */\n    get size() {\n        return this._data.size;\n    }\n    /**\n     * Get the file attribute\n     */\n    get attributes() {\n        return this._attributes;\n    }\n    /**\n     * Get the file permissions\n     */\n    get permissions() {\n        // If this is not a dav ressource, we can only read it\n        if (this.owner === null && !this.isDavRessource) {\n            return Permission.READ;\n        }\n        // If the permissions are not defined, we have none\n        return this._data.permissions !== undefined\n            ? this._data.permissions\n            : Permission.NONE;\n    }\n    /**\n     * Get the file owner\n     */\n    get owner() {\n        // Remote ressources have no owner\n        if (!this.isDavRessource) {\n            return null;\n        }\n        return this._data.owner;\n    }\n    /**\n     * Is this a dav-related ressource ?\n     */\n    get isDavRessource() {\n        return isDavRessource(this.source, this._knownDavService);\n    }\n    /**\n     * Get the dav root of this object\n     */\n    get root() {\n        // If provided (recommended), use the root and strip away the ending slash\n        if (this._data.root) {\n            return this._data.root.replace(/^(.+)\\/$/, '$1');\n        }\n        // Use the source to get the root from the dav service\n        if (this.isDavRessource) {\n            const root = dirname(this.source);\n            return root.split(this._knownDavService).pop() || null;\n        }\n        return null;\n    }\n    /**\n     * Get the absolute path of this object relative to the root\n     */\n    get path() {\n        if (this.root) {\n            // Using replace would remove all part matching root\n            const firstMatch = this.source.indexOf(this.root);\n            return this.source.slice(firstMatch + this.root.length) || '/';\n        }\n        return (this.dirname + '/' + this.basename).replace(/\\/\\//g, '/');\n    }\n    /**\n     * Get the node id if defined.\n     * Will look for the fileid in attributes if undefined.\n     */\n    get fileid() {\n        return this._data?.id || this.attributes?.fileid;\n    }\n    /**\n     * Move the node to a new destination\n     *\n     * @param {string} destination the new source.\n     * e.g. https://cloud.domain.com/remote.php/dav/files/emma/Photos/picture.jpg\n     */\n    move(destination) {\n        validateData({ ...this._data, source: destination }, this._knownDavService);\n        this._data.source = destination;\n        this._data.mtime = new Date();\n    }\n    /**\n     * Rename the node\n     * This aliases the move method for easier usage\n     */\n    rename(basename) {\n        if (basename.includes('/')) {\n            throw new Error('Invalid basename');\n        }\n        this.move(dirname(this.source) + '/' + basename);\n    }\n}\n\n/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nclass File extends Node {\n    get type() {\n        return FileType.File;\n    }\n}\n\n/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nclass Folder extends Node {\n    constructor(data) {\n        // enforcing mimes\n        super({\n            ...data,\n            mime: 'httpd/unix-directory'\n        });\n    }\n    get type() {\n        return FileType.Folder;\n    }\n    get extension() {\n        return null;\n    }\n    get mime() {\n        return 'httpd/unix-directory';\n    }\n}\n\n/**\n * @copyright Copyright (c) 2021 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nclass FileAction {\n    _action;\n    constructor(action) {\n        this.validateAction(action);\n        this._action = action;\n    }\n    get id() {\n        return this._action.id;\n    }\n    get displayName() {\n        return this._action.displayName;\n    }\n    get iconSvgInline() {\n        return this._action.iconSvgInline;\n    }\n    get enabled() {\n        return this._action.enabled;\n    }\n    get exec() {\n        return this._action.exec;\n    }\n    get execBatch() {\n        return this._action.execBatch;\n    }\n    get order() {\n        return this._action.order;\n    }\n    get default() {\n        return this._action.default;\n    }\n    get inline() {\n        return this._action.inline;\n    }\n    get renderInline() {\n        return this._action.renderInline;\n    }\n    validateAction(action) {\n        if (!action.id || typeof action.id !== 'string') {\n            throw new Error('Invalid id');\n        }\n        if (!action.displayName || typeof action.displayName !== 'function') {\n            throw new Error('Invalid displayName function');\n        }\n        if (!action.iconSvgInline || typeof action.iconSvgInline !== 'function') {\n            throw new Error('Invalid iconSvgInline function');\n        }\n        if (!action.exec || typeof action.exec !== 'function') {\n            throw new Error('Invalid exec function');\n        }\n        // Optional properties --------------------------------------------\n        if ('enabled' in action && typeof action.enabled !== 'function') {\n            throw new Error('Invalid enabled function');\n        }\n        if ('execBatch' in action && typeof action.execBatch !== 'function') {\n            throw new Error('Invalid execBatch function');\n        }\n        if ('order' in action && typeof action.order !== 'number') {\n            throw new Error('Invalid order');\n        }\n        if ('default' in action && typeof action.default !== 'boolean') {\n            throw new Error('Invalid default');\n        }\n        if ('inline' in action && typeof action.inline !== 'function') {\n            throw new Error('Invalid inline function');\n        }\n        if ('renderInline' in action && typeof action.renderInline !== 'function') {\n            throw new Error('Invalid renderInline function');\n        }\n    }\n}\nconst registerFileAction = function (action) {\n    if (typeof window._nc_fileactions === 'undefined') {\n        window._nc_fileactions = [];\n        logger.debug('FileActions initialized');\n    }\n    // Check duplicates\n    if (window._nc_fileactions.find(search => search.id === action.id)) {\n        logger.error(`FileAction ${action.id} already registered`, { action });\n        return;\n    }\n    window._nc_fileactions.push(action);\n};\nconst getFileActions = function () {\n    return window._nc_fileactions || [];\n};\n\n/**\n * @copyright 2019 Christoph Wurst <christoph@winzerhof-wurst.at>\n *\n * @author Christoph Wurst <christoph@winzerhof-wurst.at>\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n/**\n * Add a new menu entry to the upload manager menu\n */\nconst addNewFileMenuEntry = function (entry) {\n    const newFileMenu = getNewFileMenu();\n    return newFileMenu.registerEntry(entry);\n};\n/**\n * Remove a previously registered entry from the upload menu\n */\nconst removeNewFileMenuEntry = function (entry) {\n    const newFileMenu = getNewFileMenu();\n    return newFileMenu.unregisterEntry(entry);\n};\n/**\n * Get the list of registered entries from the upload menu\n *\n * @param {FileInfo} context the creation context. Usually the current folder FileInfo\n */\nconst getNewFileMenuEntries = function (context) {\n    const newFileMenu = getNewFileMenu();\n    return newFileMenu.getEntries(context);\n};\n\nexport { File, FileAction, FileType, Folder, Node, Permission, addNewFileMenuEntry, formatFileSize, getFileActions, getNewFileMenuEntries, parseWebdavPermissions, registerFileAction, removeNewFileMenuEntry };\n//# sourceMappingURL=index.esm.js.map\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { getLoggerBuilder } from '@nextcloud/logger';\nexport default getLoggerBuilder()\n    .setApp('files_sharing')\n    .detectUser()\n    .build();\n","import { Folder, File } from '@nextcloud/files';\nimport { generateOcsUrl, generateRemoteUrl, generateUrl } from '@nextcloud/router';\nimport { getCurrentUser } from '@nextcloud/auth';\nimport axios from '@nextcloud/axios';\nimport logger from './logger';\nexport const rootPath = `/files/${getCurrentUser()?.uid}`;\nconst headers = {\n    'Content-Type': 'application/json',\n};\nconst ocsEntryToNode = function (ocsEntry) {\n    try {\n        const isFolder = ocsEntry?.item_type === 'folder';\n        const hasPreview = ocsEntry?.has_preview === true;\n        const Node = isFolder ? Folder : File;\n        const fileid = ocsEntry.file_source;\n        const previewUrl = hasPreview ? generateUrl('/core/preview?fileId={fileid}&x=32&y=32&forceIcon=0', { fileid }) : undefined;\n        // Generate path and strip double slashes\n        const path = ocsEntry?.path || ocsEntry.file_target;\n        const source = generateRemoteUrl(`dav/${rootPath}/${path}`.replaceAll(/\\/\\//gm, '/'));\n        // Prefer share time if more recent than item mtime\n        let mtime = ocsEntry?.item_mtime ? new Date((ocsEntry.item_mtime) * 1000) : undefined;\n        if (ocsEntry?.stime > (ocsEntry?.item_mtime || 0)) {\n            mtime = new Date((ocsEntry.stime) * 1000);\n        }\n        return new Node({\n            id: fileid,\n            source,\n            owner: ocsEntry?.uid_owner,\n            mime: ocsEntry?.mimetype,\n            mtime,\n            size: ocsEntry?.item_size,\n            permissions: ocsEntry?.item_permissions || ocsEntry?.permissions,\n            root: rootPath,\n            attributes: {\n                ...ocsEntry,\n                previewUrl,\n                'has-preview': hasPreview,\n                favorite: ocsEntry?.tags?.includes(window.OC.TAG_FAVORITE) ? 1 : 0,\n            },\n        });\n    }\n    catch (error) {\n        logger.error('Error while parsing OCS entry', { error });\n        return null;\n    }\n};\nconst getShares = function (shared_with_me = false) {\n    const url = generateOcsUrl('apps/files_sharing/api/v1/shares');\n    return axios.get(url, {\n        headers,\n        params: {\n            shared_with_me,\n            include_tags: true,\n        },\n    });\n};\nconst getSharedWithYou = function () {\n    return getShares(true);\n};\nconst getSharedWithOthers = function () {\n    return getShares();\n};\nconst getRemoteShares = function () {\n    const url = generateOcsUrl('apps/files_sharing/api/v1/remote_shares');\n    return axios.get(url, {\n        headers,\n        params: {\n            include_tags: true,\n        },\n    });\n};\nconst getPendingShares = function () {\n    const url = generateOcsUrl('apps/files_sharing/api/v1/shares/pending');\n    return axios.get(url, {\n        headers,\n        params: {\n            include_tags: true,\n        },\n    });\n};\nconst getRemotePendingShares = function () {\n    const url = generateOcsUrl('apps/files_sharing/api/v1/remote_shares/pending');\n    return axios.get(url, {\n        headers,\n        params: {\n            include_tags: true,\n        },\n    });\n};\nconst getDeletedShares = function () {\n    const url = generateOcsUrl('apps/files_sharing/api/v1/deletedshares');\n    return axios.get(url, {\n        headers,\n        params: {\n            include_tags: true,\n        },\n    });\n};\nexport const getContents = async (sharedWithYou = true, sharedWithOthers = true, pendingShares = false, deletedshares = false, filterTypes = []) => {\n    const promises = [];\n    if (sharedWithYou) {\n        promises.push(getSharedWithYou(), getRemoteShares());\n    }\n    if (sharedWithOthers) {\n        promises.push(getSharedWithOthers());\n    }\n    if (pendingShares) {\n        promises.push(getPendingShares(), getRemotePendingShares());\n    }\n    if (deletedshares) {\n        promises.push(getDeletedShares());\n    }\n    const responses = await Promise.all(promises);\n    const data = responses.map((response) => response.data.ocs.data).flat();\n    let contents = data.map(ocsEntryToNode).filter((node) => node !== null);\n    if (filterTypes.length > 0) {\n        contents = contents.filter((node) => filterTypes.includes(node.attributes?.share_type));\n    }\n    return {\n        folder: new Folder({\n            id: 0,\n            source: generateRemoteUrl('dav' + rootPath),\n            owner: getCurrentUser()?.uid || null,\n        }),\n        contents,\n    };\n};\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport logger from '../logger';\nexport var DefaultType;\n(function (DefaultType) {\n    DefaultType[\"DEFAULT\"] = \"default\";\n    DefaultType[\"HIDDEN\"] = \"hidden\";\n})(DefaultType || (DefaultType = {}));\nexport class FileAction {\n    _action;\n    constructor(action) {\n        this.validateAction(action);\n        this._action = action;\n    }\n    get id() {\n        return this._action.id;\n    }\n    get displayName() {\n        return this._action.displayName;\n    }\n    get iconSvgInline() {\n        return this._action.iconSvgInline;\n    }\n    get enabled() {\n        return this._action.enabled;\n    }\n    get exec() {\n        return this._action.exec;\n    }\n    get execBatch() {\n        return this._action.execBatch;\n    }\n    get order() {\n        return this._action.order;\n    }\n    get default() {\n        return this._action.default;\n    }\n    get inline() {\n        return this._action.inline;\n    }\n    get renderInline() {\n        return this._action.renderInline;\n    }\n    validateAction(action) {\n        if (!action.id || typeof action.id !== 'string') {\n            throw new Error('Invalid id');\n        }\n        if (!action.displayName || typeof action.displayName !== 'function') {\n            throw new Error('Invalid displayName function');\n        }\n        if (!action.iconSvgInline || typeof action.iconSvgInline !== 'function') {\n            throw new Error('Invalid iconSvgInline function');\n        }\n        if (!action.exec || typeof action.exec !== 'function') {\n            throw new Error('Invalid exec function');\n        }\n        // Optional properties --------------------------------------------\n        if ('enabled' in action && typeof action.enabled !== 'function') {\n            throw new Error('Invalid enabled function');\n        }\n        if ('execBatch' in action && typeof action.execBatch !== 'function') {\n            throw new Error('Invalid execBatch function');\n        }\n        if ('order' in action && typeof action.order !== 'number') {\n            throw new Error('Invalid order');\n        }\n        if (action.default && !Object.values(DefaultType).includes(action.default)) {\n            throw new Error('Invalid default');\n        }\n        if ('inline' in action && typeof action.inline !== 'function') {\n            throw new Error('Invalid inline function');\n        }\n        if ('renderInline' in action && typeof action.renderInline !== 'function') {\n            throw new Error('Invalid renderInline function');\n        }\n    }\n}\nexport const registerFileAction = function (action) {\n    if (typeof window._nc_fileactions === 'undefined') {\n        window._nc_fileactions = [];\n        logger.debug('FileActions initialized');\n    }\n    // Check duplicates\n    if (window._nc_fileactions.find(search => search.id === action.id)) {\n        logger.error(`FileAction ${action.id} already registered`, { action });\n        return;\n    }\n    window._nc_fileactions.push(action);\n};\nexport const getFileActions = function () {\n    return window._nc_fileactions || [];\n};\n","import { translate as t } from '@nextcloud/l10n';\nimport AccountClockSvg from '@mdi/svg/svg/account-clock.svg?raw';\nimport AccountGroupSvg from '@mdi/svg/svg/account-group.svg?raw';\nimport AccountSvg from '@mdi/svg/svg/account.svg?raw';\nimport DeleteSvg from '@mdi/svg/svg/delete.svg?raw';\nimport LinkSvg from '@mdi/svg/svg/link.svg?raw';\nimport ShareVariantSvg from '@mdi/svg/svg/share-variant.svg?raw';\nimport { getContents } from '../services/SharingService';\nexport const sharesViewId = 'shareoverview';\nexport const sharedWithYouViewId = 'sharingin';\nexport const sharedWithOthersViewId = 'sharingout';\nexport const sharingByLinksViewId = 'sharinglinks';\nexport const deletedSharesViewId = 'deletedshares';\nexport const pendingSharesViewId = 'pendingshares';\nexport default () => {\n    const Navigation = window.OCP.Files.Navigation;\n    Navigation.register({\n        id: sharesViewId,\n        name: t('files_sharing', 'Shares'),\n        caption: t('files_sharing', 'Overview of shared files.'),\n        emptyTitle: t('files_sharing', 'No shares'),\n        emptyCaption: t('files_sharing', 'Files and folders you shared or have been shared with you will show up here'),\n        icon: ShareVariantSvg,\n        order: 20,\n        columns: [],\n        getContents: () => getContents(),\n    });\n    Navigation.register({\n        id: sharedWithYouViewId,\n        name: t('files_sharing', 'Shared with you'),\n        caption: t('files_sharing', 'List of files that are shared with you.'),\n        emptyTitle: t('files_sharing', 'Nothing shared with you yet'),\n        emptyCaption: t('files_sharing', 'Files and folders others shared with you will show up here'),\n        icon: AccountSvg,\n        order: 1,\n        parent: sharesViewId,\n        columns: [],\n        getContents: () => getContents(true, false, false, false),\n    });\n    Navigation.register({\n        id: sharedWithOthersViewId,\n        name: t('files_sharing', 'Shared with others'),\n        caption: t('files_sharing', 'List of files that you shared with others.'),\n        emptyTitle: t('files_sharing', 'Nothing shared yet'),\n        emptyCaption: t('files_sharing', 'Files and folders you shared will show up here'),\n        icon: AccountGroupSvg,\n        order: 2,\n        parent: sharesViewId,\n        columns: [],\n        getContents: () => getContents(false, true, false, false),\n    });\n    Navigation.register({\n        id: sharingByLinksViewId,\n        name: t('files_sharing', 'Shared by link'),\n        caption: t('files_sharing', 'List of files that are shared by link.'),\n        emptyTitle: t('files_sharing', 'No shared links'),\n        emptyCaption: t('files_sharing', 'Files and folders you shared by link will show up here'),\n        icon: LinkSvg,\n        order: 3,\n        parent: sharesViewId,\n        columns: [],\n        getContents: () => getContents(false, true, false, false, [window.OC.Share.SHARE_TYPE_LINK]),\n    });\n    Navigation.register({\n        id: deletedSharesViewId,\n        name: t('files_sharing', 'Deleted shares'),\n        caption: t('files_sharing', 'List of shares you left.'),\n        emptyTitle: t('files_sharing', 'No deleted shares'),\n        emptyCaption: t('files_sharing', 'Shares you have left will show up here'),\n        icon: DeleteSvg,\n        order: 4,\n        parent: sharesViewId,\n        columns: [],\n        getContents: () => getContents(false, false, false, true),\n    });\n    Navigation.register({\n        id: pendingSharesViewId,\n        name: t('files_sharing', 'Pending shares'),\n        caption: t('files_sharing', 'List of unapproved shares.'),\n        emptyTitle: t('files_sharing', 'No pending shares'),\n        emptyCaption: t('files_sharing', 'Shares you have received but not approved will show up here'),\n        icon: AccountClockSvg,\n        order: 5,\n        parent: sharesViewId,\n        columns: [],\n        getContents: () => getContents(false, false, true, false),\n    });\n};\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { getLoggerBuilder } from '@nextcloud/logger'\n\nexport default getLoggerBuilder()\n\t.setApp('files')\n\t.detectUser()\n\t.build()\n","import { emit } from '@nextcloud/event-bus';\nimport { generateOcsUrl } from '@nextcloud/router';\nimport { translatePlural as n } from '@nextcloud/l10n';\nimport axios from '@nextcloud/axios';\nimport CheckSvg from '@mdi/svg/svg/check.svg?raw';\nimport { FileAction, registerFileAction } from '../../../files/src/services/FileAction';\nimport { pendingSharesViewId } from '../views/shares';\nexport const action = new FileAction({\n    id: 'accept-share',\n    displayName: (nodes) => n('files_sharing', 'Accept share', 'Accept shares', nodes.length),\n    iconSvgInline: () => CheckSvg,\n    enabled: (nodes, view) => nodes.length > 0 && view.id === pendingSharesViewId,\n    async exec(node) {\n        try {\n            const isRemote = !!node.attributes.remote;\n            const url = generateOcsUrl('apps/files_sharing/api/v1/{shareBase}/pending/{id}', {\n                shareBase: isRemote ? 'remote_shares' : 'shares',\n                id: node.attributes.id,\n            });\n            await axios.post(url);\n            // Remove from current view\n            emit('files:node:deleted', node);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    async execBatch(nodes, view, dir) {\n        return Promise.all(nodes.map(node => this.exec(node, view, dir)));\n    },\n    order: 1,\n    inline: () => true,\n});\nregisterFileAction(action);\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { translate as t } from '@nextcloud/l10n';\nimport { registerFileAction, FileAction, DefaultType } from '../../../files/src/services/FileAction';\nimport { sharesViewId, sharedWithYouViewId, sharedWithOthersViewId, sharingByLinksViewId } from '../views/shares';\nexport const action = new FileAction({\n    id: 'open-in-files',\n    displayName: () => t('files', 'Open in files'),\n    iconSvgInline: () => '',\n    enabled: (nodes, view) => [\n        sharesViewId,\n        sharedWithYouViewId,\n        sharedWithOthersViewId,\n        sharingByLinksViewId,\n        // Deleted and pending shares are not\n        // accessible in the files app.\n    ].includes(view.id),\n    async exec(node) {\n        window.OCP.Files.Router.goToRoute(null, // use default route\n        { view: 'files', fileid: node.fileid }, { dir: node.dirname, fileid: node.fileid });\n        return null;\n    },\n    default: DefaultType.HIDDEN,\n    // Before openFolderAction\n    order: -1000,\n});\nregisterFileAction(action);\n","import { emit } from '@nextcloud/event-bus';\nimport { generateOcsUrl } from '@nextcloud/router';\nimport { translatePlural as n } from '@nextcloud/l10n';\nimport axios from '@nextcloud/axios';\nimport CloseSvg from '@mdi/svg/svg/close.svg?raw';\nimport { FileAction, registerFileAction } from '../../../files/src/services/FileAction';\nimport { pendingSharesViewId } from '../views/shares';\nexport const action = new FileAction({\n    id: 'reject-share',\n    displayName: (nodes) => n('files_sharing', 'Reject share', 'Reject shares', nodes.length),\n    iconSvgInline: () => CloseSvg,\n    enabled: (nodes, view) => {\n        if (view.id !== pendingSharesViewId) {\n            return false;\n        }\n        if (nodes.length === 0) {\n            return false;\n        }\n        // disable rejecting group shares from the pending list because they anyway\n        // land back into that same list after rejecting them\n        if (nodes.some(node => node.attributes.remote_id\n            && node.attributes.share_type === window.OC.Share.SHARE_TYPE_REMOTE_GROUP)) {\n            return false;\n        }\n        return true;\n    },\n    async exec(node) {\n        try {\n            const isRemote = !!node.attributes.remote;\n            const url = generateOcsUrl('apps/files_sharing/api/v1/{shareBase}/{id}', {\n                shareBase: isRemote ? 'remote_shares' : 'shares',\n                id: node.attributes.id,\n            });\n            await axios.delete(url);\n            // Remove from current view\n            emit('files:node:deleted', node);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    async execBatch(nodes, view, dir) {\n        return Promise.all(nodes.map(node => this.exec(node, view, dir)));\n    },\n    order: 2,\n    inline: () => true,\n});\nregisterFileAction(action);\n","import { emit } from '@nextcloud/event-bus';\nimport { generateOcsUrl } from '@nextcloud/router';\nimport { translatePlural as n } from '@nextcloud/l10n';\nimport axios from '@nextcloud/axios';\nimport ArrowULeftTopSvg from '@mdi/svg/svg/arrow-u-left-top.svg?raw';\nimport { FileAction, registerFileAction } from '../../../files/src/services/FileAction';\nimport { deletedSharesViewId } from '../views/shares';\nexport const action = new FileAction({\n    id: 'restore-share',\n    displayName: (nodes) => n('files_sharing', 'Restore share', 'Restore shares', nodes.length),\n    iconSvgInline: () => ArrowULeftTopSvg,\n    enabled: (nodes, view) => nodes.length > 0 && view.id === deletedSharesViewId,\n    async exec(node) {\n        try {\n            const url = generateOcsUrl('apps/files_sharing/api/v1/deletedshares/{id}', {\n                id: node.attributes.id,\n            });\n            await axios.post(url);\n            // Remove from current view\n            emit('files:node:deleted', node);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    async execBatch(nodes, view, dir) {\n        return Promise.all(nodes.map(node => this.exec(node, view, dir)));\n    },\n    order: 1,\n    inline: () => true,\n});\nregisterFileAction(action);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.j = 6691;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t6691: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknextcloud\"] = self[\"webpackChunknextcloud\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [7874], function() { return __webpack_require__(64123); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","user","FileType","Permission","setApp","build","setUid","uid","isDavRessource","source","davService","match","validateData","data","id","Error","URL","e","startsWith","mtime","Date","crtime","mime","size","permissions","NONE","ALL","owner","attributes","root","includes","service","join","Node","_data","_attributes","_knownDavService","constructor","this","handler","set","target","prop","value","Reflect","deleteProperty","Proxy","replace","basename","extension","extname","dirname","firstMatch","indexOf","slice","length","url","pathname","undefined","READ","split","pop","path","fileid","move","destination","rename","File","type","Folder","super","getLoggerBuilder","detectUser","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","input","hint","prim","toPrimitive","res","String","_toPrimitive","_toPropertyKey","DefaultType","rootPath","concat","_getCurrentUser","getCurrentUser","headers","ocsEntryToNode","ocsEntry","_ocsEntry$tags","isFolder","item_type","hasPreview","has_preview","file_source","previewUrl","generateUrl","file_target","generateRemoteUrl","replaceAll","item_mtime","stime","uid_owner","mimetype","item_size","item_permissions","favorite","tags","window","OC","TAG_FAVORITE","logger","getShares","shared_with_me","generateOcsUrl","axios","get","params","include_tags","getPendingShares","getRemotePendingShares","getDeletedShares","getContents","_ref","_callee","_getCurrentUser2","sharedWithOthers","pendingShares","deletedshares","filterTypes","promises","responses","contents","_args","_context","all","map","response","ocs","flat","node","_node$attributes","share_type","folder","args","sharesViewId","sharedWithYouViewId","sharedWithOthersViewId","sharingByLinksViewId","deletedSharesViewId","pendingSharesViewId","FileAction","action","_classCallCheck","validateAction","_action","iconSvgInline","enabled","exec","execBatch","order","default","inline","renderInline","registerFileAction","_nc_fileactions","debug","find","search","_asyncToGenerator","nodes","n","view","isRemote","remote","shareBase","post","emit","t0","dir","_this","_callee2","_context2","Navigation","t","OCP","Files","Router","goToRoute","HIDDEN","some","remote_id","Share","SHARE_TYPE_REMOTE_GROUP","delete","register","caption","emptyTitle","emptyCaption","icon","columns","parent","SHARE_TYPE_LINK","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","m","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","getter","__esModule","d","a","definition","o","g","globalThis","Function","nmd","paths","children","b","document","baseURI","location","href","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","bind","nc","__webpack_exports__"],"sourceRoot":""}